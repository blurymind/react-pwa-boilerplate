{"version":3,"sources":["hooks/use-local-storage/index.ts","components/nav-bar/index.ts","components/nav-bar/NavBar.tsx","helpers/gist.tsx","assets/images/logo.svg","helpers/local-fs.ts","pages/project/index.tsx","helpers/pwa-tools.ts","components/dnd-sheet/index.tsx","pages/main/index.tsx","pages/about/index.tsx","pages/settings/index.tsx","pages/engine/index.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","err","console","error","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","getLocalStorage","NavBar","className","hasChanges","log","role","to","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","MySwal","withReactContent","Swal","Gists","require","noGistsSet","fire","TryOpenGist","gistId","token","cb","a","gists","get","then","gist","gistFiles","body","files","inputOptions","Object","keys","forEach","title","input","inputAttributes","autocomplete","inputPlaceholder","showCancelButton","content","fileName","filename","trySaveGist","data","edit","length","writeFile","fileHandle","contents","createWriter","writer","write","close","createWritable","writable","getNewFileHandle","options","extension","opts","types","description","accept","showSaveFilePicker","type","accepts","extensions","mimeTypes","chooseFileSystemEntries","readFile","file","text","Promise","resolve","reader","FileReader","addEventListener","e","srcElement","result","readAsText","_readFileLegacy","DATA","id","label","items","tint","Project","onChange","setItems","setHasChanges","setFileName","hostType","setHostType","recentFiles","setRecentFiles","editedFileRef","useRef","useEffect","buttonId","deferredPrompt","addBtn","document","getElementById","preventDefault","style","display","prompt","userChoice","choiceResult","outcome","matchMedia","matches","initiatePwaButton","onSaveToFs","current","name","onSave","onOpenGist","onOpenLocal","showOpenFilePicker","handles","getFile","fileContents","find","onOpen","openedFileName","fileHostType","openGistByName","src","logo","alt","onClick","html","map","suggestion","join","preConfirm","trySaveAsGist","index","DroppableList","droppableId","provided","droppableProps","ref","innerRef","filter","Boolean","draggableId","draggableProps","dragHandleProps","placeholder","DndSheet","groups","setGroups","buildAndSave","i","onDragEnd","destination","source","sourceIndex","targetIndex","workValue","slice","splice","deletedItem","sourceDroppableIndex","targetDroppableIndex","sourceItems","targetItems","Main","About","href","Settings","setGistId","gistToken","setGistToken","target","Engine","App","projectInfo","setProjectInfo","basename","process","render","location","path","exact","props","changed","prev","component","isLocalhost","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","URL","origin","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"2eA2BeA,EAzBgB,SAACC,EAAaC,GAA4B,IAAD,EAChCC,oBAAS,WAC7C,IACE,IAAMC,EAAOC,OAAOC,aAAaC,QAAQN,GACzC,OAAOG,EAAOI,KAAKC,MAAML,GAAQF,EACjC,MAAOQ,GAEP,OADAC,QAAQC,MAAMF,GACPR,MAP2D,mBAC/DW,EAD+D,KAClDC,EADkD,KAsBtE,MAAO,CAACD,EAXS,SAACE,GAChB,IACE,IAAMC,EACJD,aAAiBE,SAAWF,EAAMF,GAAeE,EACnDD,EAAeE,GACfX,OAAOC,aAAaY,QAAQjB,EAAKO,KAAKW,UAAUH,IAChD,MAAON,GACPC,QAAQC,MAAMF,OASPU,EAAkB,SAACnB,GAC9B,IACE,IAAMG,EAAOC,OAAOC,aAAaC,QAAQN,GACzC,OAAOG,EAAOI,KAAKC,MAAML,GAAQ,KACjC,MAAOM,GAEP,OADAC,QAAQC,MAAMF,GACP,O,OCjCIW,ECWA,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,UACVC,EAAaH,EAAgB,cAEnC,OADAT,QAAQa,IAAID,GAEV,sBAAKD,UAAWA,EAAWG,KAAK,aAAhC,UACE,eAAC,IAAD,CAAMH,UAAU,cAAcI,GAAG,IAAjC,qBACWH,EAAa,IAAM,MAE9B,cAAC,IAAD,CAAMD,UAAU,cAAcI,GAAG,SAAjC,mBAGA,cAAC,IAAD,CAAMJ,UAAU,cAAcI,GAAG,UAAjC,iBAGA,cAAC,IAAD,CAAMJ,UAAU,cAAcI,GAAG,YAAjC,sBAGA,eAAC,IAAD,CAAMJ,UAAU,cAAcI,GAAG,SAAjC,UACE,qBAAKJ,UAAU,uBAAf,mBACA,qBAAKA,UAAU,sBAAf,SACE,qBACEK,MAAM,6BACNL,UAAU,UACVM,KAAK,OACLC,QAAQ,YACRC,OAAO,eALT,SAOE,sBACEC,cAAc,QACdC,eAAe,QACfC,YAAa,EACbC,EAAE,yK,oEC1CVC,E,MAASC,GAAiBC,KAC1BC,EAAQC,EAAQ,KAEhBC,EAAa,WACjBH,IAAKI,KACH,iBACA,0CACA,YAyBSC,EAAW,uCAAG,WACzBC,EACAC,EACAC,GAHyB,eAAAC,EAAA,sDAKnBC,EAAQ,IAAIT,EAAM,CAAEM,UAC1BjC,QAAQa,IAAI,OAAQuB,EAAOH,GAEvBG,GAASH,GAASD,EACpBI,EAAMC,IAAIL,GAAQM,MAAK,SAACC,GACtB,IAAMC,EAAYD,EAAKE,KAAKC,MACtBC,EAAoB,GAC1BC,OAAOC,KAAKL,GAAWM,SAAQ,SAACxD,GAC9BqD,EAAarD,GAAOA,KAEtBU,QAAQa,IAAI,aAAc2B,GAC1BhB,EAAOM,KAAK,CACViB,MAAO,qCACPC,MAAO,SACPL,eACAM,gBAAiB,CACfC,aAAc,OAEhBC,iBAAkB,8BAClBC,kBAAkB,IACjBd,MAAK,YAAgB,IAAblC,EAAY,EAAZA,MACT,GAAIA,EAAO,CACT,IAAMiD,EAAUb,EAAUpC,GAAOiD,QAC3BC,EAAWd,EAAUpC,GAAOmD,SAClCvD,QAAQa,IAAI2B,EAAUpC,IACtB8B,EAAG,CAAEmB,UAASC,qBAKpBzB,IACAK,EAAG,KApCoB,2CAAH,0DAwCXsB,EAAW,uCAAG,WACzBxB,EACAC,GAFyB,+BAAAE,EAAA,sDAGzBmB,EAHyB,+BAGd,UACXG,EAJyB,uBAMnBrB,EAAQ,IAAIT,EAAM,CAAEM,UAEtBD,GAAUC,GAASG,EACrBA,EAAMC,IAAIL,GAAQM,MAAK,SAACC,GACtB,IAAMC,EAAYI,OAAOC,KAAKN,EAAKE,KAAKC,OACxC1C,QAAQa,IAAI2B,GACZJ,EAAMsB,KAAK1B,EAAQ,CACjBU,MAAM,eAAIY,EAAW,CAAED,QAASI,MAElC/B,IAAKI,KACH,SADF,kDAE6CwB,EAF7C,iBAE8DtB,EAF9D,qBAEiFyB,EAAKE,OAFtF,UAGE,cAIJ9B,IAtBuB,2CAAH,wDC1ET,MAA0B,iCCS5B+B,EAAS,uCAAG,WAAOC,EAAiBC,GAAxB,iBAAA3B,EAAA,0DAEnB0B,EAAWE,aAFQ,gCAIAF,EAAWE,eAJX,cAIfC,EAJe,gBAMfA,EAAOC,MAAM,EAAGH,GAND,uBAQfE,EAAOE,QARQ,+CAWvBlE,QAAQa,IAAIgD,GAXW,UAcAA,EAAWM,iBAdX,eAcjBC,EAdiB,iBAgBjBA,EAASH,MAAMH,GAhBE,yBAkBjBM,EAASF,QAlBQ,4CAAH,wDAyCTG,EAAmB,WAAqC,IAApCC,EAAmC,uDAAzB,CAAEC,UAAW,OAC9CA,EAAcD,EAAdC,UAER,GAAI,uBAAwB7E,OAAQ,CAClC,IAAM8E,EAAO,CACXC,MAAO,CACL,CACEC,YAAa,YACbC,OAAQ,CAAE,aAAc,CAAC,IAAD,OAAKJ,QAKnC,OAAO7E,OAAOkF,mBAAmBJ,GAGnC,IAAMA,EAAO,CACXK,KAAM,YACNC,QAAS,CACP,CACEJ,YAAa,YACbK,WAAY,CAACR,GACbS,UAAW,CAAC,iBAKlB,OAAOtF,OAAOuF,wBAAwBT,IA4B3BU,EAAW,SAACC,GAEvB,OAAIA,EAAKC,KACAD,EAAKC,OArBQ,SAACD,GACvB,OAAO,IAAIE,SAAQ,SAACC,GAClB,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,iBAAiB,WAAW,SAACC,GAAO,IAAD,EAElCN,EAAI,UAAGM,EAAEC,kBAAL,aAAG,EAAcC,OAC3BN,EAAQF,MAEVG,EAAOM,WAAWV,MAgBbW,CAAgBX,IC9FnBY,EAAO,CACX,CACEC,GAAI,MACJC,MAAO,iBACPC,MAAO,CACL,CACEF,GAAI,OACJC,MAAO,oBACPtF,UAAW,oDAEb,CACEqF,GAAI,OACJC,MACE,mGAEJ,CACED,GAAI,OACJC,MACE,wKAEJ,CAAED,GAAI,OAAQC,MAAO,2CAEvBE,KAAM,GAER,CACEH,GAAI,MACJC,MAAO,gBACPC,MAAO,CACL,CAAEF,GAAI,OAAQC,MAAO,wCACrB,CACED,GAAI,OACJC,MACE,4HAGNE,KAAM,GAER,CACEH,GAAI,MACJC,MAAO,UACPC,MAAO,CACL,CAAEF,GAAI,OAAQC,MAAO,uCACrB,CAAED,GAAI,OAAQC,MAAO,oCAEvBE,KAAM,IA4LKC,EApLC,SAAC,GAAoC,IAAD,IAAjCC,gBAAiC,MAAtB,aAAsB,EAC5CrE,EAASvB,EAAgB,UACzBwB,EAAQxB,EAAgB,aAFoB,EAGxBpB,EAAgB,iBAAkB0G,GAHV,mBAG3CG,EAH2C,KAGpCI,EAHoC,OAIdjH,EAAgB,cAAc,GAJhB,mBAI3CuB,EAJ2C,KAI/B2F,EAJ+B,OAKlBlH,EAAgB,WAAY,WALV,mBAK3CiE,EAL2C,KAKjCkD,EALiC,OAMlBnH,EAAgB,WAAY,MANV,mBAM3CoH,EAN2C,KAMjCC,EANiC,OAOZrH,EAAgB,cAAe,IAPnB,mBAO3CsH,EAP2C,KAO9BC,EAP8B,KAQ5CC,EAAgBC,iBAAY,MAElCC,qBAAU,WACJN,GChFyB,WAA0B,IAAzBO,EAAwB,uDAAb,SAEvCC,EAAsB,KACpBC,EAAcC,SAASC,eAAeJ,GAC5CtH,OAAO+F,iBAAiB,uBAAuB,SAACC,GAE9CA,EAAE2B,iBACFJ,EAAiBvB,EAEjBwB,EAAOI,MAAMC,QAAU,QAEvBL,EAAOzB,iBAAiB,SAAS,WAE/ByB,EAAOI,MAAMC,QAAU,OACvBN,EAAeO,SAEfP,EAAeQ,WAAWnF,MAAK,SAACoF,GACD,aAAzBA,EAAaC,SACf3H,QAAQa,IAAI,iCACZqG,EAAOI,MAAMC,QAAU,QAEvBvH,QAAQa,IAAI,kCAEdoG,EAAiB,WAIjBvH,OAAOkI,WAAW,8BAA8BC,UAClDX,EAAOI,MAAMC,QAAU,WDoDXO,CAAkB,YAC/B,IAEH,IAAMC,EAAU,uCAAG,4BAAA5F,EAAA,yDACZ0E,EAAcmB,QADF,gCAGe3D,EAAiB,CAAEE,UAAW,SAH7C,OAGfsC,EAAcmB,QAHC,OAIfhI,QAAQa,IAAI,WAAZ,UAAwBgG,EAAcmB,eAAtC,aAAwB,EAAuBC,MAJhC,OAMjBrE,EAAUiD,EAAcmB,QAASnI,KAAKW,UAAU0F,IAChDlG,QAAQa,IAAI,WAAYgG,EAAcmB,SACtCzB,GAAc,GARG,2CAAH,qDAuBV2B,EAAM,uCAAG,sBAAA/F,EAAA,sDACI,SAAbsE,GACFjD,EAAYxB,EAAQC,EAAOqB,EAAUzD,KAAKW,UAAU0F,IACpDQ,EAAY,QACZH,GAAc,GACdF,EAAS,CACP/C,WACA1C,YAAY,EACZ6F,cAIFsB,IAZW,2CAAH,qDAgBNI,EAAU,uCAAG,8BAAAhG,EAAA,sDACXH,EAASvB,EAAgB,UACzBwB,EAAQxB,EAAgB,aAE9BsB,EAAYC,EAAQC,GAAO,YAAiC,IAA9BoB,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,SACrCtD,QAAQa,IAAI,YAAawC,GACzBiD,EAASzG,KAAKC,MAAMuD,IACpBwD,EAAcmB,QAAU,CAAEC,KAAM3E,GAChCkD,EAAYlD,GACZiD,GAAc,MAEhBG,EAAY,QAXK,2CAAH,qDAcV0B,EAAW,uCAAG,8BAAAjG,EAAA,sEDnGhB,uBAAwBzC,OAEnBA,OAAO2I,qBAAqB/F,MAAK,SAACgG,GAAD,OAAkBA,EAAQ,MAI7D5I,OAAOuF,0BC6FM,cAElB4B,EAAcmB,QAFI,gBAGCnB,EAAcmB,QAAQO,UAHvB,cAGZpD,EAHY,gBAISD,EAASC,GAJlB,OAIZqD,EAJY,OAKlBxI,QAAQa,IAAI,cAAe2H,GAC3BlC,EAASzG,KAAKC,MAAM0I,IACpBjC,GAAc,GACdG,EAAY,MARM,4CAAH,qDAWjBK,qBAAU,WACHN,GAEHE,IACCA,EAAY8B,MACX,SAACtD,GAAD,OAAeA,EAAK7B,WAAaA,GAAY6B,EAAKsB,WAAaA,MAGjEG,EAAe,GAAD,mBAAKD,GAAL,CAAkB,CAAErD,WAAUmD,iBAC7C,CAACP,EAAOO,EAAUnD,IAErB,IAAMoF,EAAS,SAACC,EAAwBC,GAClCD,IAAmBrF,GAAYmD,IAAamC,GAE3B,SAAjBA,GHpJsB,SAC5B5G,EACAC,EACAqB,EACApB,GAEA,IAAME,EAAQ,IAAIT,EAAM,CAAEM,UACtBG,GAASH,GAASD,EACpBI,EAAMC,IAAIL,GAAQM,MAAK,SAACC,GACtB,IACMc,EADYd,EAAKE,KAAKC,MACFY,GAAUD,QACpCnB,EAAGmB,GACH3B,IAAKI,KACH,SADF,qDAEgDwB,EAFhD,iBAEiEtB,EAFjE,qBAEoFqB,EAAQM,OAF5F,UAGE,cAGC9B,IGmIHgH,CAAe7G,EAAQC,EAAO0G,GAAgB,SAACH,GAC7ClC,EAASzG,KAAKC,MAAM0I,IACpBhC,EAAYmC,GACZpC,GAAc,GACdG,EAAYkC,GACZvC,EAAS,CACP/C,SAAUqF,EACV/H,YAAY,EACZ6F,SAAUmC,QAQlB,OACE,sBAAKjI,UAAU,iDAAf,UACE,yBAAQA,UAAU,qBAAlB,UACE,qBAAKmI,IAAKC,EAAMpI,UAAU,mBAAmBqI,IAAI,SACjD,uBACA,wBAAQhD,GAAG,SAASrF,UAAU,kCAA9B,yBAGA,sBAAKA,UAAU,4BAAf,UACGqB,GAAUC,GACT,qCACE,wBACEgH,QAASd,EACTxH,UAAU,sCAFZ,uBAMA,wBACEA,UAAU,sCACVsI,QAvGO,YHMM,SAAC,GAYvB,IAAD,IAXJ3F,gBAWI,MAXO,UAWP,EAVJkD,EAUI,EAVJA,YACAxE,EASI,EATJA,OACAC,EAQI,EARJA,MACAwB,EAOI,EAPJA,KAQMrB,EAAQ,IAAIT,EAAM,CAAEM,UAEtBD,GAAUC,GAASG,EACrBA,EAAMC,IAAIL,GAAQM,MAAK,SAACC,GACtB,IAAMC,EAAYI,OAAOC,KAAKN,EAAKE,KAAKC,OAExClB,EAAOM,KAAK,CACViB,MAAO,2CACPmG,KAAK,8EAAD,OAAgF5F,EAAhF,wFAGFd,GACAA,EACG2G,KAAI,SAACC,GAAD,+BAAkCA,EAAlC,WACJC,KAAK,IANN,uBASJX,OAAQ,WAES,YAAbpF,GACA6D,SAASC,eAAe,iBAGxBD,SAASC,eAAe,eAAehH,MAAQkD,IAGnDF,kBAAkB,EAElBkG,WAAY,kCAAMnC,SAASC,eAAe,sBAA9B,aAAM,EAAwChH,SACzDkC,MAAK,YAAgB,IAAblC,EAAY,EAAZA,MACLA,GAAmB,KAAVA,IACXoD,EAAYxB,EAAQC,EAAO7B,EAAOqD,GAClC+C,EAAYpG,UAKlByB,IGvDA0H,CAAc,CACZvH,SACAC,QACAqB,WACAkD,cACA/C,KAAM5D,KAAKW,UAAU0F,KAEvBQ,EAAY,QACZH,GAAc,IA4FJ,6BASJ,wBACE0C,QAASb,EACTzH,UAAU,wCAFZ,wBAMA,wBACEA,UAAU,wCACVsI,QAASlB,EAFX,2BAMCtB,GACC,mCACE,yBACE9F,UAAU,yCACVsI,QAASf,EAFX,kBAIQ5E,EAJR,IAImB1C,EAAa,IAAM,GAAI,IACvC6F,GAAsB,cAMjC,sBAAK9F,UAAU,iDAAf,UACE,qBAAKA,UAAU,kBAAf,0BACA,qBAAKA,UAAU,qCAAf,SACGgG,EAAYwC,KAAI,SAAChE,EAAWqE,GAAZ,OACf,sBACE7I,UAAS,sBACP6I,EAAQ,EAAI,IAAM,IADX,sBAITP,QAAS,kBAAMP,EAAOvD,EAAK7B,SAAU6B,EAAKsB,WAL5C,UAOGtB,EAAK7B,SAPR,MAOqB6B,EAAKsB,WAP1B,qBAIqBtB,EAAK7B,SAJ1B,YAIsC6B,EAAKsB,uB,QE1HjDgD,EAAgB,SAAC,GAAqC,IAAnCzD,EAAkC,EAAlCA,GAAIE,EAA8B,EAA9BA,MAAOD,EAAuB,EAAvBA,MAClC,OACE,cAAC,IAAD,CAAWyD,YAAa1D,EAAxB,SACG,SAAC2D,GAAD,OACC,+CAASA,EAASC,gBAAlB,IAAkCC,IAAKF,EAASG,SAAhD,SACE,gCACE,qBAAKnJ,UAAU,2BAAf,SAA2CsF,IAC3C,qBAAKtF,UAAU,2BAAf,SACE,qBAAIA,UAAU,OAAd,UACGuF,EAAM6D,OAAOC,SAASb,KAAI,SAAC1J,EAAM+J,GAAP,OACzB,oBAAI7I,UAAWlB,EAAKkB,UAApB,SACE,cAAC,IAAD,CAAWsJ,YAAaxK,EAAKuG,GAAIwD,MAAOA,EAAxC,SACG,SAACG,GAAD,OACC,yDACEhJ,UACElB,EAAKkB,WAAa,oCAEhBgJ,EAASO,gBACTP,EAASQ,iBALf,IAMEN,IAAKF,EAASG,SANhB,SAQGrK,EAAKwG,aAXsBxG,EAAKuG,OAiB1C2D,EAASS,2BAUXC,EA5IE,SAAC,GAAqD,IAAnDnE,EAAkD,EAAlDA,MAAOI,EAA2C,EAA3CA,SAAUD,EAAiC,EAAjCA,SAAU1F,EAAuB,EAAvBA,UAAuB,EACxCnB,mBAAc,IAD0B,mBAC7D8K,EAD6D,KACrDC,EADqD,KAG9DC,EAAe,SAACtE,GAEpB,IADA,IAAMoE,EAAc,GACXG,EAAI,EAAGA,EAAI7H,OAAOC,KAAKqD,GAAOvC,SAAU8G,EAAG,CAElDH,EADqBpE,EAAMuE,GACPzE,IAAMyE,EAG5BnE,EAASJ,GAETqE,EAAUD,IAQZ,OALAvD,qBAAU,WAERyD,EAAatE,KACZ,IAGD,cAAC,IAAD,CACEwE,UAAW,SAAC9E,GAAY,IACd+E,EAA2C/E,EAA3C+E,YAA0BC,GAAiBhF,EAA9BqE,YAA8BrE,EAAjBgF,QAAQ/F,EAASe,EAATf,KAE1C,GAAK8F,IAKHA,EAAYjB,cAAgBkB,EAAOlB,aACnCiB,EAAYnB,QAAUoB,EAAOpB,OAF/B,CAOA,GAAI,UAAY3E,EAAM,CACpB,IAAMgG,EAAcD,EAAOpB,MACrBsB,EAAcH,EAAYnB,MAE1BuB,EAAY7E,EAAM8E,QAJJ,EAKED,EAAUE,OAAOJ,EAAa,GAA7CK,EALa,oBAUpB,OAJAH,EAAUE,OAAOH,EAAa,EAAGI,QAEjCV,EAAaO,GAKf,IAAMI,EAAuBb,EAAOM,EAAOlB,aACrC0B,EAAuBd,EAAOK,EAAYjB,aAC1C2B,EAAcnF,EAAMiF,GAAsBjF,MAAM8E,QAChDM,EACJV,EAAOlB,cAAgBiB,EAAYjB,YAC/BxD,EAAMkF,GAAsBlF,MAAM8E,QAClCK,EAjCe,EAoCCA,EAAYJ,OAAOL,EAAOpB,MAAO,GAAhD0B,EApCc,oBAqCrBI,EAAYL,OAAON,EAAYnB,MAAO,EAAG0B,GAEzC,IAAMH,EAAY7E,EAAM8E,QACxBD,EAAUI,GAAV,2BACKjF,EAAMiF,IADX,IAEEjF,MAAOmF,IAETN,EAAUK,GAAV,2BACKlF,EAAMkF,IADX,IAEElF,MAAOoF,IAGThF,EAASyE,GACT1E,EAAS0E,KAnDb,SAsDE,cAAC,IAAD,CAAWrB,YAAY,OAAO7E,KAAK,QAAnC,SACG,SAAC8E,GAAD,OACC,gDACMA,EAASC,gBADf,IAEEC,IAAKF,EAASG,SACdnJ,UAAWA,EAHb,UAKGuF,EAAMiD,KAAI,SAAC1J,EAAM+J,GAAP,OACT,cAAC,IAAD,CAAWS,YAAaxK,EAAKuG,GAAkBwD,MAAOA,EAAtD,SACG,SAACG,GAAD,OACC,2DACMA,EAASO,gBACTP,EAASQ,iBAFf,IAGEN,IAAKF,EAASG,SAHhB,SAKE,cAAC,EAAD,eAAiCrK,GAAbA,EAAKuG,SAPOvG,EAAKuG,OAY5C2D,EAASS,sBCrGhBrE,G,OAAO,CAEX,CACEC,GAAI,MACJC,MAAO,iBACPC,MAAO,CACL,CACEF,GAAI,OACJC,MAAO,oBACPtF,UAAW,oDAEb,CACEqF,GAAI,OACJC,MACE,mGAEJ,CACED,GAAI,OACJC,MACE,wKAEJ,CAAED,GAAI,OAAQC,MAAO,2CAEvBE,KAAM,GAER,CACEH,GAAI,MACJC,MAAO,gBACPC,MAAO,CACL,CAAEF,GAAI,OAAQC,MAAO,wCACrB,CACED,GAAI,OACJC,MACE,4HAGNE,KAAM,GAER,CACEH,GAAI,MACJC,MAAO,UACPC,MAAO,CACL,CAAEF,GAAI,OAAQC,MAAO,uCACrB,CAAED,GAAI,OAAQC,MAAO,oCAEvBE,KAAM,KA4BKoF,EApBF,SAAC,GAAoC,IAAD,IAAjClF,gBAAiC,MAAtB,aAAsB,IACrBhH,EAAgB,iBAAkB0G,GADb,mBACxCG,EADwC,KACjCI,EADiC,KAO/C,OACE,sBAAK3F,UAAU,iDAAf,UACE,cAAC,EAAD,CACEuF,MAAOA,EACPI,SAAUA,EACVD,SATiB,WACrBA,EAAS,CAAEzF,YAAY,KASnBD,UAAU,SALd,SCrDW6K,EAZD,WACZ,OACE,qCACE,4DACA,mBAAGC,KAAK,qDAAR,iGC6CSC,EA/CE,WAAO,IAAD,EACOrM,EAAgB,SAAU,IADjC,mBACd2C,EADc,KACN2J,EADM,OAEatM,EAAgB,YAAa,IAF1C,mBAEduM,EAFc,KAEHC,EAFG,KAIrB,OACE,sBAAKlL,UAAU,2CAAf,UACE,uBAAOA,UAAU,0BAAjB,sBACA,sBAAKA,UAAU,cAAf,UACE,iDACA,uBACE0F,SAAU,SAACX,GAAD,OAAOmG,EAAanG,EAAEoG,OAAO1L,QACvCyE,KAAK,WACLzE,MAAOwL,EACPjL,UAAU,oBAEU,IAArBiL,EAAUjI,QACT,mBACEmI,OAAO,SACPL,KAAK,yCACL9K,UAAU,wBAHZ,uBASJ,gCACE,8CACA,uBACE0F,SAAU,SAACX,GAAD,OAAOiG,EAAUjG,EAAEoG,OAAO1L,QACpCyE,KAAK,OACLzE,MAAO4B,EACPrB,UAAU,oBAEO,IAAlBqB,EAAO2B,QACN,mBACEmI,OAAO,SACPL,KAAK,2BACL9K,UAAU,wBAHZ,2BChCKoL,EAJA,WACb,OAAO,uCC4DMC,EArDH,WAAO,IAAD,EACsBxM,mBAAS,CAC7C8D,SAAU7C,EAAgB,YAC1BG,WAAYH,EAAgB,cAC5BgG,SAAUhG,EAAgB,cAJZ,mBACTwL,EADS,KACIC,EADJ,KAMR5I,EAAmC2I,EAAnC3I,SAAU1C,EAAyBqL,EAAzBrL,WAAY6F,EAAawF,EAAbxF,SAE9B,OACE,sBAAK9F,UAAU,yCAAf,UACE,cAAC,EAAD,CAAQA,UAAU,+FAClB,sBAAKA,UAAU,uEAAf,UACG2C,EADH,IACcmD,GAAsB,GACjC7F,EAAa,IAAM,MAEtB,cAAC,IAAD,CAAYuL,SAAUC,yBAAtB,SACE,cAAC,IAAD,CACEC,OAAQ,gBAAGC,EAAH,EAAGA,SAAH,OACN,eAAC,IAAD,CAAQA,SAAUA,EAAlB,UACE,cAAC,IAAD,CACEC,KAAK,IACLC,OAAK,EACLH,OAAQ,SAACI,GAAD,OACN,cAAC,EAAD,2BACMA,GADN,IAEEpG,SAAU,SAACqG,GAAD,OAAaR,EAAeQ,UAI5C,cAAC,IAAD,CACEH,KAAK,SACLC,OAAK,EAELH,OAAQ,SAACI,GAAD,OACN,cAAC,EAAD,2BACMA,GADN,IAEEpG,SAAU,SAACqG,GAAD,OACRR,GAAe,SAACS,GAAD,mBAAC,eAAeA,GAASD,aAKhD,cAAC,IAAD,CAAOH,KAAK,UAAUK,UAAWb,IACjC,cAAC,IAAD,CAAOQ,KAAK,YAAYK,UAAWlB,IACnC,cAAC,IAAD,CAAOa,KAAK,SAASK,UAAWpB,gBC1CxCqB,EAAc7C,QACW,cAA7BtK,OAAO4M,SAASQ,UAEe,UAA7BpN,OAAO4M,SAASQ,UAEhBpN,OAAO4M,SAASQ,SAASC,MAAM,2DA2CnC,SAASC,EAAgBC,EAAeC,GACtCC,UAAUC,cACPC,SAASJ,GACT3K,MAAK,SAACgL,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfR,UAAUC,cAAcQ,YAI1B5N,QAAQa,IACN,+GAKEqM,GAAUA,EAAOW,UACnBX,EAAOW,SAASP,KAMlBtN,QAAQa,IAAI,sCAGRqM,GAAUA,EAAOY,WACnBZ,EAAOY,UAAUR,WAO5BS,OAAM,SAAC9N,GACND,QAAQC,MAAM,4CAA6CA,MClGjE,IAYe+N,EAZS,SAACC,GACnBA,GAAeA,aAAuB3N,UACxC,8BAAqBgC,MAAK,YAAkD,IAA/C4L,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOD,GACPE,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAQL,OCDdM,IAASlC,OACP,cAAC,IAAMmC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJrH,SAASC,eAAe,SFWnB,SAAkB8F,GAEvB,GAAI,kBAAmBC,UAAW,CAGhC,GADkB,IAAIsB,IAAIrC,yBAAwB1M,OAAO4M,SAASb,MACpDiD,SAAWhP,OAAO4M,SAASoC,OAIvC,OAGFhP,OAAO+F,iBAAiB,QAAQ,WAC9B,IAAMwH,EAAK,UAAMb,yBAAN,sBAEPS,IAgEV,SAAiCI,EAAeC,GAE9CyB,MAAM1B,EAAO,CACX2B,QAAS,CAAE,iBAAkB,YAE5BtM,MAAK,SAACuM,GAEL,IAAMC,EAAcD,EAASD,QAAQvM,IAAI,gBAEnB,MAApBwM,EAASE,QACO,MAAfD,IAA8D,IAAvCA,EAAYE,QAAQ,cAG5C7B,UAAUC,cAAc6B,MAAM3M,MAAK,SAACgL,GAClCA,EAAa4B,aAAa5M,MAAK,WAC7B5C,OAAO4M,SAAS6C,eAKpBnC,EAAgBC,EAAOC,MAG1Ba,OAAM,WACL/N,QAAQa,IAAI,oEAtFVuO,CAAwBnC,EAAOC,GAI/BC,UAAUC,cAAc6B,MAAM3M,MAAK,WACjCtC,QAAQa,IACN,+GAMJmM,EAAgBC,EAAOC,OElC/BmC,GAKArB,M","file":"static/js/main.5dedcb73.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nexport const useLocalStorage = (key: string, initialValue: any): any => {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (err) {\n      console.error(err);\n      return initialValue;\n    }\n  });\n\n  const setValue = (value: any) => {\n    try {\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return [storedValue, setValue];\n};\n\nexport default useLocalStorage;\n\nexport const getLocalStorage = (key: string): any => {\n  try {\n    const item = window.localStorage.getItem(key);\n    return item ? JSON.parse(item) : null;\n  } catch (err) {\n    console.error(err);\n    return null;\n  }\n};\n","import NavBar from \"./NavBar\";\n\nexport default NavBar;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getLocalStorage } from \"@hooks/use-local-storage\";\n//rsc to get template\n//div.px-4.cursor-pointer.md:hidden and hit tab\n\n// md:hidden media query\n//https://tailwindcss.com/docs/guides/create-react-app\n//https://heroicons.com/\nexport interface Props {\n  className?: string;\n}\n\nconst NavBar = ({ className }: Props) => {\n  const hasChanges = getLocalStorage(\"hasChanges\");\n  console.log(hasChanges);\n  return (\n    <nav className={className} role=\"navigation\">\n      <Link className=\"self-center\" to=\"/\">\n        Project {hasChanges ? \"*\" : \"\"}\n      </Link>\n      <Link className=\"self-center\" to=\"/sheet\">\n        Sheet\n      </Link>\n      <Link className=\"self-center\" to=\"/engine\">\n        Run\n      </Link>\n      <Link className=\"self-center\" to=\"/settings\">\n        Settings\n      </Link>\n      <Link className=\"self-center\" to=\"/about\">\n        <div className=\"pr-8 md:block hidden\">About</div>\n        <div className=\"px-4 cursor-pointer\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"h-6 w-6\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n            />\n          </svg>\n        </div>\n      </Link>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nconst MySwal = withReactContent(Swal);\nconst Gists = require(\"gists\");\n\nconst noGistsSet = () => {\n  Swal.fire(\n    \"Not configured\",\n    \"Your github settings are not configured\",\n    \"warning\"\n  );\n};\n\nexport const openGistByName = (\n  gistId: string,\n  token: string,\n  fileName: string,\n  cb: (a: string) => void\n) => {\n  const gists = new Gists({ token });\n  if (gists && token && gistId) {\n    gists.get(gistId).then((gist: any) => {\n      const gistFiles = gist.body.files;\n      const content = gistFiles[fileName].content;\n      cb(content);\n      Swal.fire(\n        \"Opened\",\n        `The Yarn has been loaded from gist \\nName: ${fileName}\\nAt: ${gistId}\\nLength: ${content.length} chars`,\n        \"success\"\n      );\n    });\n  } else noGistsSet();\n};\n\nexport const TryOpenGist = async (\n  gistId: string,\n  token: string,\n  cb: (a: { content?: string; fileName?: string }) => void\n) => {\n  const gists = new Gists({ token });\n  console.log(\"Gist\", gists, token);\n\n  if (gists && token && gistId) {\n    gists.get(gistId).then((gist: any) => {\n      const gistFiles = gist.body.files;\n      const inputOptions: any = {};\n      Object.keys(gistFiles).forEach((key) => {\n        inputOptions[key] = key;\n      });\n      console.log(\"GIST FILES\", gistFiles);\n      MySwal.fire({\n        title: \"🐙 Open file from a gist\",\n        input: \"select\",\n        inputOptions,\n        inputAttributes: {\n          autocomplete: \"off\",\n        },\n        inputPlaceholder: \"Select a file from the gist\",\n        showCancelButton: true,\n      }).then(({ value }) => {\n        if (value) {\n          const content = gistFiles[value].content;\n          const fileName = gistFiles[value].filename;\n          console.log(gistFiles[value]);\n          cb({ content, fileName });\n        }\n      });\n    });\n  } else {\n    noGistsSet();\n    cb({});\n  }\n};\n\nexport const trySaveGist = async (\n  gistId: string,\n  token: string,\n  fileName = \"NewFile\",\n  data: string\n) => {\n  const gists = new Gists({ token });\n\n  if (gistId && token && gists) {\n    gists.get(gistId).then((gist: any) => {\n      const gistFiles = Object.keys(gist.body.files);\n      console.log(gistFiles);\n      gists.edit(gistId, {\n        files: { [fileName]: { content: data } },\n      });\n      Swal.fire(\n        \"Saved!\",\n        `The Yarn has been saved to gist \\nName: ${fileName}\\nAt: ${gistId}\\nLength: ${data.length} chars`,\n        \"success\"\n      );\n    });\n  } else {\n    noGistsSet();\n  }\n};\n\nexport const trySaveAsGist = ({\n  fileName = \"NewFile\",\n  setFileName,\n  gistId,\n  token,\n  data,\n}: {\n  fileName: string;\n  setFileName: (a: string) => void;\n  gistId: string;\n  token: string;\n  data: string;\n}) => {\n  const gists = new Gists({ token });\n\n  if (gistId && token && gists) {\n    gists.get(gistId).then((gist: any) => {\n      const gistFiles = Object.keys(gist.body.files);\n\n      MySwal.fire({\n        title: \"💾 Save file - enter file name\",\n        html: `<input id=\"swal-input1\" list=\"select-file-name\" name=\"select\" placeholder=\"${fileName}\">\n      <datalist class=\"form-control\" id=\"select-file-name\">    \n        ${\n          gistFiles &&\n          gistFiles\n            .map((suggestion) => `<option value=\"${suggestion}\" />`)\n            .join(\"\")\n        }\n      </datalist>`,\n        onOpen: () => {\n          if (\n            fileName !== \"NewFile\" &&\n            document.getElementById(\"swal-input1\")\n          ) {\n            //@ts-ignore\n            document.getElementById(\"swal-input1\").value = fileName;\n          }\n        },\n        showCancelButton: true,\n        //@ts-ignore\n        preConfirm: () => document.getElementById(\"swal-input1\")?.value,\n      }).then(({ value }) => {\n        if (value && value !== \"\") {\n          trySaveGist(gistId, token, value, data);\n          setFileName(value);\n        }\n      });\n    });\n  } else {\n    noGistsSet();\n  }\n};\n","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","//https://web.dev/file-system-access/\n// https://github.com/GoogleChromeLabs/text-editor/blob/main/src/inline-scripts/fs-helpers.js\n// Requests continuous read/write access to a file and returns an object to let you write to the file on demand\n/**\n * Writes the contents to disk.\n *\n * @param {FileSystemFileHandle} fileHandle File handle to write to.\n * @param {string} contents Contents to write.\n */\nexport const writeFile = async (fileHandle: any, contents: string) => {\n  // Support for Chrome 82 and earlier.\n  if (fileHandle.createWriter) {\n    // Create a writer (request permission if necessary).\n    const writer = await fileHandle.createWriter();\n    // Write the full length of the contents\n    await writer.write(0, contents);\n    // Close the file and write the contents to disk\n    await writer.close();\n    return;\n  }\n  console.log(fileHandle);\n  // For Chrome 83 and later.\n  // Create a FileSystemWritableFileStream to write to.\n  const writable = await fileHandle.createWritable();\n  // Write the contents of the file to the stream.\n  await writable.write(contents);\n  // Close the file and write the contents to disk.\n  await writable.close();\n};\n\n/**\n * Open a handle to an existing file on the local file system.\n *\n * @return {!Promise<FileSystemFileHandle>} Handle to the existing file.\n */\nexport const getFileHandle = () => {\n  // For Chrome 86 and later...\n  if (\"showOpenFilePicker\" in window) {\n    //@ts-ignore\n    return window.showOpenFilePicker().then((handles: any) => handles[0]);\n  }\n  // For Chrome 85 and earlier...\n  //@ts-ignore\n  return window.chooseFileSystemEntries();\n};\n\n/**\n * Create a handle to a new (text) file on the local file system.\n * @return {!Promise<FileSystemFileHandle>} Handle to the new file.\n */\nexport const getNewFileHandle = (options = { extension: \"txt\" }) => {\n  const { extension } = options;\n  // For Chrome 86 and later...\n  if (\"showSaveFilePicker\" in window) {\n    const opts = {\n      types: [\n        {\n          description: \"Text file\",\n          accept: { \"text/plain\": [`.${extension}`] },\n        },\n      ],\n    };\n    //@ts-ignore\n    return window.showSaveFilePicker(opts);\n  }\n  // For Chrome 85 and earlier...\n  const opts = {\n    type: \"save-file\",\n    accepts: [\n      {\n        description: \"Text file\",\n        extensions: [extension],\n        mimeTypes: [\"text/plain\"],\n      },\n    ],\n  };\n  //@ts-ignore\n  return window.chooseFileSystemEntries(opts);\n};\n\n/**\n * Reads the raw text from a file.\n *\n * @private\n * @param {File} file\n * @return {Promise<string>} A promise that resolves to the parsed string.\n */\nconst _readFileLegacy = (file: any) => {\n  return new Promise((resolve) => {\n    const reader = new FileReader();\n    reader.addEventListener(\"loadend\", (e) => {\n      //@ts-ignore\n      const text = e.srcElement?.result;\n      resolve(text);\n    });\n    reader.readAsText(file);\n  });\n};\n\n/**\n * Reads the raw text from a file.\n *\n * @param {File} file\n * @return {!Promise<string>} A promise that resolves to the parsed string.\n */\nexport const readFile = (file: any) => {\n  // If the new .text() reader is available, use it.\n  if (file.text) {\n    return file.text();\n  }\n  // Otherwise use the traditional file reading technique.\n  return _readFileLegacy(file);\n};\n\n/**\n * Verify the user has granted permission to read or write to the file, if\n * permission hasn't been granted, request permission.\n *\n * @param {FileSystemFileHandle} fileHandle File handle to check.\n * @param {boolean} withWrite True if write permission should be checked.\n * @return {boolean} True if the user has granted read/write permission.\n */\nexport const verifyPermission = async (fileHandle: any, withWrite: boolean) => {\n  const opts = { writable: false, mode: \"\" };\n  if (withWrite) {\n    opts.writable = true;\n    // For Chrome 86 and later...\n    opts.mode = \"readwrite\";\n  }\n  // Check if we already have permission, if so, return true.\n  if ((await fileHandle.queryPermission(opts)) === \"granted\") {\n    return true;\n  }\n  // Request permission to the file, if the user grants permission, return true.\n  if ((await fileHandle.requestPermission(opts)) === \"granted\") {\n    return true;\n  }\n  // The user did nt grant permission, return false.\n  return false;\n};\n","import React, { useEffect, useRef } from \"react\";\nimport useLocalStorage, { getLocalStorage } from \"@hooks/use-local-storage\";\nimport {\n  TryOpenGist,\n  trySaveAsGist,\n  openGistByName,\n  trySaveGist,\n} from \"@helpers/gist\";\nimport logo from \"@images/logo.svg\";\nimport {\n  getNewFileHandle,\n  readFile,\n  writeFile,\n  getFileHandle,\n} from \"@helpers/local-fs\";\nimport { initiatePwaButton } from \"@helpers/pwa-tools\";\n\nconst DATA = [\n  {\n    id: \"af3\",\n    label: \"Incoming leads\",\n    items: [\n      {\n        id: \"af31\",\n        label: \"Item 3.1 - Auguri\",\n        className: \"bg-red-500 hover:bg-red-700 rounded-md mb-1 mx-1\",\n      },\n      {\n        id: \"af32\",\n        label:\n          \"Item 3.2 - Sed tellus risus, tincidunt ac fringilla sed, rho vel elit. Fusce et mauris lobortis\",\n      },\n      {\n        id: \"af33\",\n        label:\n          \"Item 3.3 - Praesent nec massa vel ante porta elementum. Nulla urna risus, ullamcorper a nibh sodales, laoreet ullamcorper arcu. Nulla vel ante neque. Ut nunc tortor\",\n      },\n      { id: \"af34\", label: \"Item 3.4 - Aliquam hendrerit quis nibh\" },\n    ],\n    tint: 1,\n  },\n  {\n    id: \"af1\",\n    label: \"Closing leads\",\n    items: [\n      { id: \"af11\", label: \"Item 1.1 - Sed sit amet ornare nisi.\" },\n      {\n        id: \"af12\",\n        label:\n          \"Item 1.2 - Donec aliquet commodo justo, in faucibus libero efficitur ut. Nam ut lacus in dui sollicitudin sollicitudin.\",\n      },\n    ],\n    tint: 2,\n  },\n  {\n    id: \"af2\",\n    label: \"On hold\",\n    items: [\n      { id: \"af21\", label: \"Item 2.1 - Vivamus eget ante tempor\" },\n      { id: \"af22\", label: \"Item 2.2 - Pellentesque euismod\" },\n    ],\n    tint: 3,\n  },\n];\n\nexport interface Props {\n  onChange: (a: any) => void;\n}\n\nconst Project = ({ onChange = () => {} }: Props) => {\n  const gistId = getLocalStorage(\"gistId\");\n  const token = getLocalStorage(\"gistToken\");\n  const [items, setItems] = useLocalStorage(\"dnd-sheet-data\", DATA);\n  const [hasChanges, setHasChanges] = useLocalStorage(\"hasChanges\", false);\n  const [fileName, setFileName] = useLocalStorage(\"fileName\", \"NewFile\");\n  const [hostType, setHostType] = useLocalStorage(\"hostType\", null); //null | \"gist\" | \"fs\"\n  const [recentFiles, setRecentFiles] = useLocalStorage(\"recentFiles\", []);\n  const editedFileRef = useRef<any>(null);\n\n  useEffect(() => {\n    if (hostType) initiatePwaButton(\"addBtn\");\n  }, []);\n\n  const onSaveToFs = async () => {\n    if (!editedFileRef.current) {\n      //ask about saving a new file\n      editedFileRef.current = await getNewFileHandle({ extension: \"json\" });\n      console.log(\"new file\", editedFileRef.current?.name);\n    }\n    writeFile(editedFileRef.current, JSON.stringify(items));\n    console.log(\"wrote to\", editedFileRef.current);\n    setHasChanges(false);\n  };\n\n  const onSaveAsGist = () => {\n    trySaveAsGist({\n      gistId,\n      token,\n      fileName,\n      setFileName,\n      data: JSON.stringify(items),\n    });\n    setHostType(\"gist\");\n    setHasChanges(false);\n  };\n\n  const onSave = async () => {\n    if (hostType === \"gist\") {\n      trySaveGist(gistId, token, fileName, JSON.stringify(items));\n      setHostType(\"gist\");\n      setHasChanges(false);\n      onChange({\n        fileName,\n        hasChanges: false,\n        hostType,\n      });\n    } else {\n      // from hd - not working on mobile yet boo\n      onSaveToFs();\n    }\n  };\n\n  const onOpenGist = async () => {\n    const gistId = getLocalStorage(\"gistId\");\n    const token = getLocalStorage(\"gistToken\");\n    // from gist\n    TryOpenGist(gistId, token, ({ content, fileName }: any) => {\n      console.log(\"Got this:\", content);\n      setItems(JSON.parse(content));\n      editedFileRef.current = { name: fileName };\n      setFileName(fileName);\n      setHasChanges(false);\n    });\n    setHostType(\"gist\");\n  };\n\n  const onOpenLocal = async () => {\n    // From local hd - not working on mobile yet- boo\n    editedFileRef.current = await getFileHandle();\n    const file = await editedFileRef.current.getFile();\n    const fileContents = await readFile(file);\n    console.log(\"opened file\", fileContents);\n    setItems(JSON.parse(fileContents));\n    setHasChanges(false);\n    setHostType(\"fs\");\n  };\n\n  useEffect(() => {\n    if (!hostType) return;\n    if (\n      recentFiles &&\n      !recentFiles.find(\n        (file: any) => file.fileName === fileName && file.hostType === hostType\n      )\n    )\n      setRecentFiles([...recentFiles, { fileName, hostType }]);\n  }, [items, hostType, fileName]);\n\n  const onOpen = (openedFileName: string, fileHostType: string) => {\n    if (openedFileName === fileName && hostType === fileHostType) return;\n\n    if (fileHostType === \"gist\") {\n      openGistByName(gistId, token, openedFileName, (fileContents: string) => {\n        setItems(JSON.parse(fileContents));\n        setFileName(openedFileName);\n        setHasChanges(false);\n        setHostType(fileHostType);\n        onChange({\n          fileName: openedFileName,\n          hasChanges: false,\n          hostType: fileHostType,\n        });\n      });\n    } else {\n      //Todo add fs\n    }\n  };\n\n  return (\n    <div className=\"flex flex-1 flex-col overflow-auto bg-gray-600\">\n      <header className=\"pt-2 flex flex-row\">\n        <img src={logo} className=\"animate-spin h-8\" alt=\"logo\" />\n        <br />\n        <button id=\"addBtn\" className=\"bg-blue-400 rounded-md p-1 mb-3\">\n          Install pwa\n        </button>\n        <div className=\"flex-box flex-wrap flex-1\">\n          {gistId && token && (\n            <>\n              <button\n                onClick={onOpenGist}\n                className=\"bg-red-400 rounded-md p-1 mb-3 mx-1\"\n              >\n                Open gist\n              </button>\n              <button\n                className=\"bg-red-400 rounded-md p-1 mb-3 mx-1\"\n                onClick={onSaveAsGist}\n              >\n                Save as Gist\n              </button>\n            </>\n          )}\n\n          <button\n            onClick={onOpenLocal}\n            className=\"bg-green-400 rounded-md p-1 mb-3 mx-1\"\n          >\n            Open local\n          </button>\n          <button\n            className=\"bg-green-400 rounded-md p-1 mb-3 mx-1\"\n            onClick={onSaveToFs}\n          >\n            Save as Local\n          </button>\n          {hostType && (\n            <>\n              <button\n                className=\"bg-yellow-400 rounded-md p-1 mb-3 mx-1\"\n                onClick={onSave}\n              >\n                Save {fileName} {hasChanges ? \"*\" : \"\"}{\" \"}\n                {hostType ? hostType : \"\"}\n              </button>\n            </>\n          )}\n        </div>\n      </header>\n      <div className=\"px-2 pb-2 flex flex-1 flex-col overflow-hidden\">\n        <div className=\"p-2 bg-gray-400\">Open recent:</div>\n        <div className=\"flex flex-1 flex-col overflow-auto\">\n          {recentFiles.map((file: any, index: number) => (\n            <div\n              className={`p-2 bg-gray-${\n                index % 2 ? 200 : 300\n              } hover:bg-gray-100`}\n              key={`recentFile-${file.fileName}-${file.hostType}`}\n              onClick={() => onOpen(file.fileName, file.hostType)}\n            >\n              {file.fileName} @ {file.hostType}\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Project;\n","export const initiatePwaButton = (buttonId = \"addBtn\") => {\n  // PWA install promotion banner on start\n  let deferredPrompt: any = null;\n  const addBtn: any = document.getElementById(buttonId);\n  window.addEventListener(\"beforeinstallprompt\", (e: any) => {\n    // Prevent Chrome 67 and earlier from automatically showing the prompt\n    e.preventDefault();\n    deferredPrompt = e;\n    // Update UI to notify the user they can add to home screen\n    addBtn.style.display = \"block\";\n\n    addBtn.addEventListener(\"click\", () => {\n      // hide our user interface that shows our A2HS button\n      addBtn.style.display = \"none\";\n      deferredPrompt.prompt();\n      // Wait for the user to respond to the prompt\n      deferredPrompt.userChoice.then((choiceResult: any) => {\n        if (choiceResult.outcome === \"accepted\") {\n          console.log(\"User accepted the A2HS prompt\");\n          addBtn.style.display = \"none\";\n        } else {\n          console.log(\"User dismissed the A2HS prompt\");\n        }\n        deferredPrompt = null;\n      });\n    });\n\n    if (window.matchMedia(\"(display-mode: fullscreen)\").matches) {\n      addBtn.style.display = \"none\";\n    }\n  });\n};\n","import React, { useEffect, useState } from \"react\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\n\nexport type ItemType = { id: string; className: string; tint: any };\nexport type GroupType = { items: Array<any>; id: string; label: string };\nexport interface Props {\n  items: Array<GroupType>;\n  setItems: (p: Array<GroupType>) => void;\n  onChange: (p: Array<GroupType>) => void;\n  className: string;\n}\n\nconst DndSheet = ({ items, setItems, onChange, className }: Props) => {\n  const [groups, setGroups] = useState<any>({});\n\n  const buildAndSave = (items: Array<GroupType>) => {\n    const groups: any = {};\n    for (let i = 0; i < Object.keys(items).length; ++i) {\n      const currentGroup = items[i];\n      groups[currentGroup.id] = i;\n    }\n    // Set the data.\n    setItems(items);\n    // Makes the groups searchable via their id.\n    setGroups(groups);\n  };\n\n  useEffect(() => {\n    // Mock an API call.\n    buildAndSave(items);\n  }, []);\n\n  return (\n    <DragDropContext\n      onDragEnd={(result) => {\n        const { destination, draggableId, source, type } = result;\n\n        if (!destination) {\n          return;\n        }\n\n        if (\n          destination.droppableId === source.droppableId &&\n          destination.index === source.index\n        ) {\n          return;\n        }\n\n        if (\"group\" === type) {\n          const sourceIndex = source.index;\n          const targetIndex = destination.index;\n\n          const workValue = items.slice();\n          const [deletedItem] = workValue.splice(sourceIndex, 1);\n          workValue.splice(targetIndex, 0, deletedItem);\n\n          buildAndSave(workValue);\n\n          return;\n        }\n\n        const sourceDroppableIndex = groups[source.droppableId];\n        const targetDroppableIndex = groups[destination.droppableId];\n        const sourceItems = items[sourceDroppableIndex].items.slice();\n        const targetItems =\n          source.droppableId !== destination.droppableId\n            ? items[targetDroppableIndex].items.slice()\n            : sourceItems;\n\n        // Pull the item from the source.\n        const [deletedItem] = sourceItems.splice(source.index, 1);\n        targetItems.splice(destination.index, 0, deletedItem);\n\n        const workValue = items.slice();\n        workValue[sourceDroppableIndex] = {\n          ...items[sourceDroppableIndex],\n          items: sourceItems,\n        };\n        workValue[targetDroppableIndex] = {\n          ...items[targetDroppableIndex],\n          items: targetItems,\n        };\n\n        setItems(workValue);\n        onChange(workValue);\n      }}\n    >\n      <Droppable droppableId=\"ROOT\" type=\"group\">\n        {(provided) => (\n          <div\n            {...provided.droppableProps}\n            ref={provided.innerRef}\n            className={className}\n          >\n            {items.map((item, index) => (\n              <Draggable draggableId={item.id} key={item.id} index={index}>\n                {(provided) => (\n                  <div\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    ref={provided.innerRef}\n                  >\n                    <DroppableList key={item.id} {...item} />\n                  </div>\n                )}\n              </Draggable>\n            ))}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n};\n\nconst DroppableList = ({ id, items, label }: GroupType) => {\n  return (\n    <Droppable droppableId={id}>\n      {(provided) => (\n        <div {...provided.droppableProps} ref={provided.innerRef}>\n          <div>\n            <div className=\"bg-gray-500 rounded-t-md\">{label}</div>\n            <div className=\"bg-gray-500 rounded-b-md\">\n              <ul className=\"list\">\n                {items.filter(Boolean).map((item, index) => (\n                  <li className={item.className} key={item.id}>\n                    <Draggable draggableId={item.id} index={index}>\n                      {(provided) => (\n                        <div\n                          className={\n                            item.className || \"bg-blue-400 rounded-md mb-1 mx-1\"\n                          }\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                          ref={provided.innerRef}\n                        >\n                          {item.label}\n                        </div>\n                      )}\n                    </Draggable>\n                  </li>\n                ))}\n                {provided.placeholder}\n              </ul>\n            </div>\n          </div>\n        </div>\n      )}\n    </Droppable>\n  );\n};\n\nexport default DndSheet;\n","import React, { useEffect } from \"react\";\nimport DndSheet, { GroupType } from \"@components/dnd-sheet\";\nimport useLocalStorage from \"@hooks/use-local-storage\";\n\nimport \"../../App.css\";\n\nconst DATA = [\n  //\n  {\n    id: \"af3\",\n    label: \"Incoming leads\",\n    items: [\n      {\n        id: \"af31\",\n        label: \"Item 3.1 - Auguri\",\n        className: \"bg-red-500 hover:bg-red-700 rounded-md mb-1 mx-1\",\n      },\n      {\n        id: \"af32\",\n        label:\n          \"Item 3.2 - Sed tellus risus, tincidunt ac fringilla sed, rho vel elit. Fusce et mauris lobortis\",\n      },\n      {\n        id: \"af33\",\n        label:\n          \"Item 3.3 - Praesent nec massa vel ante porta elementum. Nulla urna risus, ullamcorper a nibh sodales, laoreet ullamcorper arcu. Nulla vel ante neque. Ut nunc tortor\",\n      },\n      { id: \"af34\", label: \"Item 3.4 - Aliquam hendrerit quis nibh\" },\n    ],\n    tint: 1,\n  },\n  {\n    id: \"af1\",\n    label: \"Closing leads\",\n    items: [\n      { id: \"af11\", label: \"Item 1.1 - Sed sit amet ornare nisi.\" },\n      {\n        id: \"af12\",\n        label:\n          \"Item 1.2 - Donec aliquet commodo justo, in faucibus libero efficitur ut. Nam ut lacus in dui sollicitudin sollicitudin.\",\n      },\n    ],\n    tint: 2,\n  },\n  {\n    id: \"af2\",\n    label: \"On hold\",\n    items: [\n      { id: \"af21\", label: \"Item 2.1 - Vivamus eget ante tempor\" },\n      { id: \"af22\", label: \"Item 2.2 - Pellentesque euismod\" },\n    ],\n    tint: 3,\n  },\n];\n\nexport interface Props {\n  onChange: (a: any) => void;\n}\n\nconst Main = ({ onChange = () => {} }: Props) => {\n  const [items, setItems] = useLocalStorage(\"dnd-sheet-data\", DATA);\n\n  const onSheetUpdated = () => {\n    onChange({ hasChanges: true });\n  };\n\n  return (\n    <div className=\"bg-gray-700 flex flex-1 flex-col overflow-auto\">\n      <DndSheet\n        items={items}\n        setItems={setItems}\n        onChange={onSheetUpdated}\n        className=\"px-4\"\n      />\n      ==\n    </div>\n  );\n};\n\nexport default Main;\n","import React from \"react\";\n\nconst About = () => {\n  return (\n    <>\n      <div>Created by Todor Imreorov</div>\n      <a href=\"https://github.com/blurymind/react-pwa-boilerplate\">\n        Check out the source code at\n        https://github.com/blurymind/react-pwa-boilerplate\n      </a>\n    </>\n  );\n};\n\nexport default About;\n","import React from \"react\";\n\nimport useLocalStorage from \"@hooks/use-local-storage\";\n\nconst Settings = () => {\n  const [gistId, setGistId] = useLocalStorage(\"gistId\", \"\");\n  const [gistToken, setGistToken] = useLocalStorage(\"gistToken\", \"\");\n\n  return (\n    <div className=\"border flex flex-col m-4 p-1 bg-gray-100\">\n      <label className=\"mb-3 bg-gray-200 flex-1\">Storage:</label>\n      <div className=\"mb-1 flex-1\">\n        <label>Gist token: </label>\n        <input\n          onChange={(e) => setGistToken(e.target.value)}\n          type=\"password\"\n          value={gistToken}\n          className=\"bg-white flex-1\"\n        />\n        {gistToken.length === 0 && (\n          <a\n            target=\"_blank\"\n            href=\"https://github.com/settings/tokens/new\"\n            className=\"ml-4 bg-gray-300 px-3\"\n          >\n            create\n          </a>\n        )}\n      </div>\n      <div>\n        <label>Gist id: </label>\n        <input\n          onChange={(e) => setGistId(e.target.value)}\n          type=\"text\"\n          value={gistId}\n          className=\"bg-white flex-1\"\n        />\n        {gistId.length === 0 && (\n          <a\n            target=\"_blank\"\n            href=\"https://gist.github.com/\"\n            className=\"ml-4 bg-gray-300 px-3\"\n          >\n            create\n          </a>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Settings;\n","import React from \"react\";\n\nconst Engine = () => {\n  return <div>err</div>;\n};\n\nexport default Engine;\n","import React, { useState } from \"react\";\nimport { Switch, Route, HashRouter } from \"react-router-dom\";\nimport NavBar from \"@components/nav-bar\";\nimport Project from \"@pages/project\";\nimport Main from \"@pages/main\";\nimport About from \"@pages/about\";\nimport Settings from \"@pages/settings\";\nimport Engine from \"@pages/engine\";\nimport { getLocalStorage } from \"@hooks/use-local-storage\";\n\nconst App = () => {\n  const [projectInfo, setProjectInfo] = useState({\n    fileName: getLocalStorage(\"fileName\"),\n    hasChanges: getLocalStorage(\"hasChanges\"),\n    hostType: getLocalStorage(\"hostType\"),\n  });\n  const { fileName, hasChanges, hostType } = projectInfo;\n\n  return (\n    <div className=\"h-screen flex flex-col overflow-hidden\">\n      <NavBar className=\"flex justify-between item-center h-13 bg-white text-black relative shadow-sm font-mono p-2\" />\n      <div className=\"flex justify-between item-center bg-gray-800 pl-2 text-white text-xs\">\n        {fileName}-{hostType ? hostType : \"\"}\n        {hasChanges ? \"*\" : \"\"}\n      </div>\n      <HashRouter basename={process.env.PUBLIC_URL}>\n        <Route\n          render={({ location }) => (\n            <Switch location={location}>\n              <Route\n                path=\"/\"\n                exact\n                render={(props) => (\n                  <Project\n                    {...props}\n                    onChange={(changed) => setProjectInfo(changed)}\n                  />\n                )}\n              />\n              <Route\n                path=\"/sheet\"\n                exact\n                // component={Main}\n                render={(props) => (\n                  <Main\n                    {...props}\n                    onChange={(changed) =>\n                      setProjectInfo((prev) => ({ ...prev, ...changed }))\n                    }\n                  />\n                )}\n              />\n              <Route path=\"/engine\" component={Engine} />\n              <Route path=\"/settings\" component={Settings} />\n              <Route path=\"/about\" component={About} />\n            </Switch>\n          )}\n        />\n      </HashRouter>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  //if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n  if ('serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}