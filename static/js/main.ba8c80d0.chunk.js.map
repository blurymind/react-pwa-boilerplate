{"version":3,"sources":["components/nav-bar/index.ts","components/nav-bar/NavBar.tsx","pages/main/logo.svg","components/dnd-sheet/index.tsx","pages/main/index.tsx","pages/about/index.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["NavBar","className","role","to","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","DroppableList","id","items","label","droppableId","provided","droppableProps","ref","innerRef","map","item","index","draggableId","draggableProps","dragHandleProps","placeholder","DndSheet","setItems","useState","groups","setGroups","buildAndSave","i","Object","keys","length","useEffect","onDragEnd","result","destination","source","type","sourceIndex","targetIndex","workValue","slice","splice","deletedItem","sourceDroppableIndex","targetDroppableIndex","sourceItems","targetItems","DATA","tint","Main","deferredPrompt","addBtn","document","getElementById","window","addEventListener","e","preventDefault","style","display","prompt","userChoice","then","choiceResult","outcome","console","log","src","logo","alt","href","target","rel","About","App","basename","process","render","location","path","exact","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","URL","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"0NAEeA,ECMA,WACb,OACE,sBACEC,UAAU,yFACVC,KAAK,aAFP,UAIE,cAAC,IAAD,CAAMD,UAAU,KAAKE,GAAG,IAAxB,kBAGA,cAAC,IAAD,CAAMF,UAAU,KAAKE,GAAG,SAAxB,mBAGA,qBAAKF,UAAU,sBAAf,SACE,qBACEG,MAAM,6BACNH,UAAU,UACVI,KAAK,OACLC,QAAQ,YACRC,OAAO,eALT,SAOE,sBACEC,cAAc,QACdC,eAAe,QACfC,YAAa,EACbC,EAAE,kKAIR,qBAAKV,UAAU,6B,QCpCN,MAA0B,iC,eCiHnCW,EAAgB,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,GAAIC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,MAClC,OACE,cAAC,IAAD,CAAWC,YAAaH,EAAxB,SACG,SAACI,GAAD,OACC,+CAASA,EAASC,gBAAlB,IAAkCC,IAAKF,EAASG,SAAhD,SACE,gCACE,qBAAKnB,UAAU,2BAAf,SAA2Cc,IAC3C,qBAAKd,UAAU,2BAAf,SACE,qBAAIA,UAAU,OAAd,UACGa,EAAMO,KAAI,SAACC,EAAMC,GAAP,OACT,oBAAItB,UAAWqB,EAAKrB,UAApB,SACE,cAAC,IAAD,CAAWuB,YAAaF,EAAKT,GAAIU,MAAOA,EAAxC,SACG,SAACN,GAAD,OACC,yDACEhB,UACEqB,EAAKrB,WAAa,oCAEhBgB,EAASQ,gBACTR,EAASS,iBALf,IAMEP,IAAKF,EAASG,SANhB,SAQGE,EAAKP,aAXsBO,EAAKT,OAiB1CI,EAASU,2BAUXC,EA3IE,SAAC,GAA2C,IAAzCd,EAAwC,EAAxCA,MAAOe,EAAiC,EAAjCA,SAAU5B,EAAuB,EAAvBA,UAAuB,EAC9B6B,mBAAc,IADgB,mBACnDC,EADmD,KAC3CC,EAD2C,KAGpDC,EAAe,SAACnB,GAEpB,IADA,IAAMiB,EAAc,GACXG,EAAI,EAAGA,EAAIC,OAAOC,KAAKtB,GAAOuB,SAAUH,EAAG,CAElDH,EADqBjB,EAAMoB,GACPrB,IAAMqB,EAG5BL,EAASf,GAETkB,EAAUD,IAQZ,OALAO,qBAAU,WAERL,EAAanB,KACZ,IAGD,cAAC,IAAD,CACEyB,UAAW,SAACC,GAAY,IACdC,EAA2CD,EAA3CC,YAA0BC,GAAiBF,EAA9BhB,YAA8BgB,EAAjBE,QAAQC,EAASH,EAATG,KAE1C,GAAKF,IAKHA,EAAYzB,cAAgB0B,EAAO1B,aACnCyB,EAAYlB,QAAUmB,EAAOnB,OAF/B,CAOA,GAAI,UAAYoB,EAAM,CACpB,IAAMC,EAAcF,EAAOnB,MACrBsB,EAAcJ,EAAYlB,MAE1BuB,EAAYhC,EAAMiC,QAJJ,EAKED,EAAUE,OAAOJ,EAAa,GAA7CK,EALa,oBAUpB,OAJAH,EAAUE,OAAOH,EAAa,EAAGI,QAEjChB,EAAaa,GAKf,IAAMI,EAAuBnB,EAAOW,EAAO1B,aACrCmC,EAAuBpB,EAAOU,EAAYzB,aAC1CoC,EAActC,EAAMoC,GAAsBpC,MAAMiC,QAChDM,EACJX,EAAO1B,cAAgByB,EAAYzB,YAC/BF,EAAMqC,GAAsBrC,MAAMiC,QAClCK,EAjCe,EAoCCA,EAAYJ,OAAON,EAAOnB,MAAO,GAAhD0B,EApCc,oBAqCrBI,EAAYL,OAAOP,EAAYlB,MAAO,EAAG0B,GAEzC,IAAMH,EAAYhC,EAAMiC,QACxBD,EAAUI,GAAV,2BACKpC,EAAMoC,IADX,IAEEpC,MAAOsC,IAETN,EAAUK,GAAV,2BACKrC,EAAMqC,IADX,IAEErC,MAAOuC,IAGTxB,EAASiB,KAlDb,SAqDE,cAAC,IAAD,CAAW9B,YAAY,OAAO2B,KAAK,QAAnC,SACG,SAAC1B,GAAD,OACC,gDACMA,EAASC,gBADf,IAEEC,IAAKF,EAASG,SACdnB,UAAWA,EAHb,UAKGa,EAAMO,KAAI,SAACC,EAAMC,GAAP,OACT,cAAC,IAAD,CAAWC,YAAaF,EAAKT,GAAkBU,MAAOA,EAAtD,SACG,SAACN,GAAD,OACC,2DACMA,EAASQ,gBACTR,EAASS,iBAFf,IAGEP,IAAKF,EAASG,SAHhB,SAKE,cAAC,EAAD,eAAiCE,GAAbA,EAAKT,SAPOS,EAAKT,OAY5CI,EAASU,sBCrGhB2B,EAAO,CACX,CACEzC,GAAI,MACJE,MAAO,iBACPD,MAAO,CACL,CACED,GAAI,OACJE,MAAO,oBACPd,UAAW,oDAEb,CACEY,GAAI,OACJE,MACE,mGAEJ,CACEF,GAAI,OACJE,MACE,wKAEJ,CAAEF,GAAI,OAAQE,MAAO,2CAEvBwC,KAAM,GAER,CACE1C,GAAI,MACJE,MAAO,gBACPD,MAAO,CACL,CAAED,GAAI,OAAQE,MAAO,wCACrB,CACEF,GAAI,OACJE,MACE,4HAGNwC,KAAM,GAER,CACE1C,GAAI,MACJE,MAAO,UACPD,MAAO,CACL,CAAED,GAAI,OAAQE,MAAO,uCACrB,CAAEF,GAAI,OAAQE,MAAO,oCAEvBwC,KAAM,IA0DKC,EAvDF,WAAO,IAAD,EACS1B,mBAA2BwB,GADpC,mBACVxC,EADU,KACHe,EADG,KAgCjB,OA7BAS,qBAAU,WAER,IAAImB,EAAsB,KACpBC,EAAcC,SAASC,eAAe,UAC5CC,OAAOC,iBAAiB,uBAAuB,SAACC,GAE9CA,EAAEC,iBACFP,EAAiBM,EAEjBL,EAAOO,MAAMC,QAAU,QAEvBR,EAAOI,iBAAiB,SAAS,WAE/BJ,EAAOO,MAAMC,QAAU,OACvBT,EAAeU,SAEfV,EAAeW,WAAWC,MAAK,SAACC,GACD,aAAzBA,EAAaC,SACfC,QAAQC,IAAI,iCACZf,EAAOO,MAAMC,QAAU,QAEvBM,QAAQC,IAAI,kCAEdhB,EAAiB,gBAItB,IAGD,qBAAKxD,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKyE,IAAKC,EAAM1E,UAAU,WAAW2E,IAAI,SACzC,oBAAG3E,UAAU,eAAb,kBACO,+CADP,0BAGA,mBACEA,UAAU,WACV4E,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,yBAQA,uBACA,wBAAQlE,GAAG,SAAX,qBACA,cAAC,EAAD,CAAUC,MAAOA,EAAOe,SAAUA,EAAU5B,UAAU,eCtF/C+E,EAZD,WACZ,OACE,qCACE,4DACA,mBAAGH,KAAK,qDAAR,iGCoBSI,G,MAlBH,WACV,OACE,qCACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAYC,SAAUC,yBAAtB,SACE,cAAC,IAAD,CACEC,OAAQ,gBAAGC,EAAH,EAAGA,SAAH,OACN,eAAC,IAAD,CAAQA,SAAUA,EAAlB,UACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWhC,IACjC,cAAC,IAAD,CAAO8B,KAAK,SAASE,UAAWR,iBCLxCS,EAAcC,QACW,cAA7B7B,OAAOwB,SAASM,UAEe,UAA7B9B,OAAOwB,SAASM,UAEhB9B,OAAOwB,SAASM,SAASC,MAAM,2DA2CnC,SAASC,EAAgBC,EAAeC,GACtCC,UAAUC,cACPC,SAASJ,GACTzB,MAAK,SAAC8B,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACfR,UAAUC,cAAcQ,YAI1BjC,QAAQC,IACN,+GAKEsB,GAAUA,EAAOW,UACnBX,EAAOW,SAASP,KAMlB3B,QAAQC,IAAI,sCAGRsB,GAAUA,EAAOY,WACnBZ,EAAOY,UAAUR,WAO5BS,OAAM,SAACC,GACNrC,QAAQqC,MAAM,4CAA6CA,MClGjE,IAYeC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqB3C,MAAK,YAAkD,IAA/C4C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASlC,OACP,cAAC,IAAMmC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJ5D,SAASC,eAAe,SFWnB,SAAkBmC,GAEvB,GAAI,kBAAmBC,UAAW,CAGhC,GADkB,IAAIwB,IAAIrC,yBAAwBtB,OAAOwB,SAASR,MACpD4C,SAAW5D,OAAOwB,SAASoC,OAIvC,OAGF5D,OAAOC,iBAAiB,QAAQ,WAC9B,IAAMgC,EAAK,UAAMX,yBAAN,sBAEPM,IAgEV,SAAiCK,EAAeC,GAE9C2B,MAAM5B,EAAO,CACX6B,QAAS,CAAE,iBAAkB,YAE5BtD,MAAK,SAACuD,GAEL,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5ChC,UAAUC,cAAcgC,MAAM5D,MAAK,SAAC8B,GAClCA,EAAa+B,aAAa7D,MAAK,WAC7BR,OAAOwB,SAAS8C,eAKpBtC,EAAgBC,EAAOC,MAG1Ba,OAAM,WACLpC,QAAQC,IAAI,oEAtFV2D,CAAwBtC,EAAOC,GAI/BC,UAAUC,cAAcgC,MAAM5D,MAAK,WACjCG,QAAQC,IACN,+GAMJoB,EAAgBC,EAAOC,OElC/BsC,GAKAvB,M","file":"static/js/main.ba8c80d0.chunk.js","sourcesContent":["import NavBar from \"./NavBar\";\n\nexport default NavBar;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n//rsc to get template\n//div.px-4.cursor-pointer.md:hidden and hit tab\n\n// md:hidden media query\n//https://tailwindcss.com/docs/guides/create-react-app\n//https://heroicons.com/\nconst NavBar = () => {\n  return (\n    <nav\n      className=\"flex justify-between item-center h-16 bg-white text-black relative shadow-sm font-mono\"\n      role=\"navigation\"\n    >\n      <Link className=\"p4\" to=\"/\">\n        Home\n      </Link>\n      <Link className=\"p4\" to=\"/about\">\n        About\n      </Link>\n      <div className=\"px-4 cursor-pointer\">\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          className=\"h-6 w-6\"\n          fill=\"none\"\n          viewBox=\"0 0 24 24\"\n          stroke=\"currentColor\"\n        >\n          <path\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth={2}\n            d=\"M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n          />\n        </svg>\n      </div>\n      <div className=\"pr-8 md:block hidden\"></div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React, { useEffect, useState } from \"react\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\n\nexport type ItemType = { id: string; className: string; tint: any };\nexport type GroupType = { items: Array<any>; id: string; label: string };\nexport interface Props {\n  items: Array<GroupType>;\n  setItems: (p: Array<GroupType>) => void;\n  className: string;\n}\n\nconst DndSheet = ({ items, setItems, className }: Props) => {\n  const [groups, setGroups] = useState<any>({});\n\n  const buildAndSave = (items: Array<GroupType>) => {\n    const groups: any = {};\n    for (let i = 0; i < Object.keys(items).length; ++i) {\n      const currentGroup = items[i];\n      groups[currentGroup.id] = i;\n    }\n    // Set the data.\n    setItems(items);\n    // Makes the groups searchable via their id.\n    setGroups(groups);\n  };\n\n  useEffect(() => {\n    // Mock an API call.\n    buildAndSave(items);\n  }, []);\n\n  return (\n    <DragDropContext\n      onDragEnd={(result) => {\n        const { destination, draggableId, source, type } = result;\n\n        if (!destination) {\n          return;\n        }\n\n        if (\n          destination.droppableId === source.droppableId &&\n          destination.index === source.index\n        ) {\n          return;\n        }\n\n        if (\"group\" === type) {\n          const sourceIndex = source.index;\n          const targetIndex = destination.index;\n\n          const workValue = items.slice();\n          const [deletedItem] = workValue.splice(sourceIndex, 1);\n          workValue.splice(targetIndex, 0, deletedItem);\n\n          buildAndSave(workValue);\n\n          return;\n        }\n\n        const sourceDroppableIndex = groups[source.droppableId];\n        const targetDroppableIndex = groups[destination.droppableId];\n        const sourceItems = items[sourceDroppableIndex].items.slice();\n        const targetItems =\n          source.droppableId !== destination.droppableId\n            ? items[targetDroppableIndex].items.slice()\n            : sourceItems;\n\n        // Pull the item from the source.\n        const [deletedItem] = sourceItems.splice(source.index, 1);\n        targetItems.splice(destination.index, 0, deletedItem);\n\n        const workValue = items.slice();\n        workValue[sourceDroppableIndex] = {\n          ...items[sourceDroppableIndex],\n          items: sourceItems,\n        };\n        workValue[targetDroppableIndex] = {\n          ...items[targetDroppableIndex],\n          items: targetItems,\n        };\n\n        setItems(workValue);\n      }}\n    >\n      <Droppable droppableId=\"ROOT\" type=\"group\">\n        {(provided) => (\n          <div\n            {...provided.droppableProps}\n            ref={provided.innerRef}\n            className={className}\n          >\n            {items.map((item, index) => (\n              <Draggable draggableId={item.id} key={item.id} index={index}>\n                {(provided) => (\n                  <div\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    ref={provided.innerRef}\n                  >\n                    <DroppableList key={item.id} {...item} />\n                  </div>\n                )}\n              </Draggable>\n            ))}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n};\n\nconst DroppableList = ({ id, items, label }: GroupType) => {\n  return (\n    <Droppable droppableId={id}>\n      {(provided) => (\n        <div {...provided.droppableProps} ref={provided.innerRef}>\n          <div>\n            <div className=\"bg-gray-500 rounded-t-md\">{label}</div>\n            <div className=\"bg-gray-500 rounded-b-md\">\n              <ul className=\"list\">\n                {items.map((item, index) => (\n                  <li className={item.className} key={item.id}>\n                    <Draggable draggableId={item.id} index={index}>\n                      {(provided) => (\n                        <div\n                          className={\n                            item.className || \"bg-blue-400 rounded-md mb-1 mx-1\"\n                          }\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                          ref={provided.innerRef}\n                        >\n                          {item.label}\n                        </div>\n                      )}\n                    </Draggable>\n                  </li>\n                ))}\n                {provided.placeholder}\n              </ul>\n            </div>\n          </div>\n        </div>\n      )}\n    </Droppable>\n  );\n};\n\nexport default DndSheet;\n","import React, { useEffect, useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport DndSheet, { GroupType } from \"@components/dnd-sheet\";\n\nconst DATA = [\n  {\n    id: \"af3\",\n    label: \"Incoming leads\",\n    items: [\n      {\n        id: \"af31\",\n        label: \"Item 3.1 - Auguri\",\n        className: \"bg-red-500 hover:bg-red-700 rounded-md mb-1 mx-1\",\n      },\n      {\n        id: \"af32\",\n        label:\n          \"Item 3.2 - Sed tellus risus, tincidunt ac fringilla sed, rho vel elit. Fusce et mauris lobortis\",\n      },\n      {\n        id: \"af33\",\n        label:\n          \"Item 3.3 - Praesent nec massa vel ante porta elementum. Nulla urna risus, ullamcorper a nibh sodales, laoreet ullamcorper arcu. Nulla vel ante neque. Ut nunc tortor\",\n      },\n      { id: \"af34\", label: \"Item 3.4 - Aliquam hendrerit quis nibh\" },\n    ],\n    tint: 1,\n  },\n  {\n    id: \"af1\",\n    label: \"Closing leads\",\n    items: [\n      { id: \"af11\", label: \"Item 1.1 - Sed sit amet ornare nisi.\" },\n      {\n        id: \"af12\",\n        label:\n          \"Item 1.2 - Donec aliquet commodo justo, in faucibus libero efficitur ut. Nam ut lacus in dui sollicitudin sollicitudin.\",\n      },\n    ],\n    tint: 2,\n  },\n  {\n    id: \"af2\",\n    label: \"On hold\",\n    items: [\n      { id: \"af21\", label: \"Item 2.1 - Vivamus eget ante tempor\" },\n      { id: \"af22\", label: \"Item 2.2 - Pellentesque euismod\" },\n    ],\n    tint: 3,\n  },\n];\nconst Main = () => {\n  const [items, setItems] = useState<Array<GroupType>>(DATA);\n\n  useEffect(() => {\n    // PWA install promotion banner on start\n    let deferredPrompt: any = null;\n    const addBtn: any = document.getElementById(\"addBtn\");\n    window.addEventListener(\"beforeinstallprompt\", (e: any) => {\n      // Prevent Chrome 67 and earlier from automatically showing the prompt\n      e.preventDefault();\n      deferredPrompt = e;\n      // Update UI to notify the user they can add to home screen\n      addBtn.style.display = \"block\";\n\n      addBtn.addEventListener(\"click\", () => {\n        // hide our user interface that shows our A2HS button\n        addBtn.style.display = \"none\";\n        deferredPrompt.prompt();\n        // Wait for the user to respond to the prompt\n        deferredPrompt.userChoice.then((choiceResult: any) => {\n          if (choiceResult.outcome === \"accepted\") {\n            console.log(\"User accepted the A2HS prompt\");\n            addBtn.style.display = \"none\";\n          } else {\n            console.log(\"User dismissed the A2HS prompt\");\n          }\n          deferredPrompt = null;\n        });\n      });\n    });\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p className=\"text-red-500\">\n          Edit <code>src/App.tsx</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n        <br />\n        <button id=\"addBtn\">Add pwa</button>\n        <DndSheet items={items} setItems={setItems} className=\"px-4\" />\n      </header>\n    </div>\n  );\n};\n\nexport default Main;\n","import React from \"react\";\n\nconst About = () => {\n  return (\n    <>\n      <div>Created by Todor Imreorov</div>\n      <a href=\"https://github.com/blurymind/react-pwa-boilerplate\">\n        Check out the source code at\n        https://github.com/blurymind/react-pwa-boilerplate\n      </a>\n    </>\n  );\n};\n\nexport default About;\n","import React from \"react\";\nimport { Switch, Route, HashRouter } from \"react-router-dom\";\nimport NavBar from \"@components/nav-bar\";\nimport Main from \"@pages/main\";\nimport About from \"@pages/about\";\n\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <>\n      <NavBar />\n      <HashRouter basename={process.env.PUBLIC_URL}>\n        <Route\n          render={({ location }) => (\n            <Switch location={location}>\n              <Route path=\"/\" exact component={Main} />\n              <Route path=\"/about\" component={About} />\n            </Switch>\n          )}\n        />\n      </HashRouter>\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  //if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n  if ('serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}