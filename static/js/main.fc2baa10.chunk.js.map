{"version":3,"sources":["components/nav-bar/index.ts","components/nav-bar/NavBar.tsx","pages/main/logo.svg","components/dnd-sheet/index.tsx","hooks/use-local-storage/index.ts","helpers/gist.tsx","pages/main/index.tsx","helpers/local-fs.ts","pages/about/index.tsx","pages/settings/index.tsx","App.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["NavBar","className","role","to","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","DroppableList","id","items","label","droppableId","provided","droppableProps","ref","innerRef","filter","Boolean","map","item","index","draggableId","draggableProps","dragHandleProps","placeholder","DndSheet","setItems","useState","groups","setGroups","buildAndSave","i","Object","keys","length","useEffect","onDragEnd","result","destination","source","type","sourceIndex","targetIndex","workValue","slice","splice","deletedItem","sourceDroppableIndex","targetDroppableIndex","sourceItems","targetItems","useLocalStorage","key","initialValue","window","localStorage","getItem","JSON","parse","err","console","error","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","getLocalStorage","Gists","require","TryOpenGist","gistId","token","cb","a","MySwal","withReactContent","Swal","gists","log","get","then","gist","gistFiles","body","files","inputOptions","forEach","fire","title","input","inputAttributes","autocomplete","inputPlaceholder","showCancelButton","content","fileName","filename","trySaveGist","data","edit","DATA","tint","Main","hasChanges","setHasChanges","editedFileRef","useRef","buttonId","deferredPrompt","addBtn","document","getElementById","addEventListener","e","preventDefault","style","display","prompt","userChoice","choiceResult","outcome","matchMedia","matches","initiatePwaButton","current","onSave","name","onOpen","src","logo","alt","onClick","About","href","Settings","setGistId","gistToken","setGistToken","onChange","target","App","basename","process","render","location","path","exact","component","isLocalhost","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","URL","origin","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.fc2baa10.chunk.js","sourcesContent":["import NavBar from \"./NavBar\";\n\nexport default NavBar;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n//rsc to get template\n//div.px-4.cursor-pointer.md:hidden and hit tab\n\n// md:hidden media query\n//https://tailwindcss.com/docs/guides/create-react-app\n//https://heroicons.com/\nexport interface Props {\n  className?: string;\n}\n\nconst NavBar = ({ className }: Props) => {\n  return (\n    <nav className={className} role=\"navigation\">\n      <Link className=\"m4\" to=\"/\">\n        Home\n      </Link>\n      <Link className=\"m4\" to=\"/settings\">\n        Settings\n      </Link>\n      <Link className=\"m4\" to=\"/about\">\n        <div className=\"pr-8 md:block hidden\">About</div>\n        <div className=\"px-4 cursor-pointer\">\n          <svg\n            xmlns=\"http://www.w3.org/2000/svg\"\n            className=\"h-6 w-6\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n            />\n          </svg>\n        </div>\n      </Link>\n\n      <div className=\"pr-8 md:block hidden\">err</div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React, { useEffect, useState } from \"react\";\nimport { DragDropContext, Draggable, Droppable } from \"react-beautiful-dnd\";\n\nexport type ItemType = { id: string; className: string; tint: any };\nexport type GroupType = { items: Array<any>; id: string; label: string };\nexport interface Props {\n  items: Array<GroupType>;\n  setItems: (p: Array<GroupType>) => void;\n  className: string;\n}\n\nconst DndSheet = ({ items, setItems, className }: Props) => {\n  const [groups, setGroups] = useState<any>({});\n\n  const buildAndSave = (items: Array<GroupType>) => {\n    const groups: any = {};\n    for (let i = 0; i < Object.keys(items).length; ++i) {\n      const currentGroup = items[i];\n      groups[currentGroup.id] = i;\n    }\n    // Set the data.\n    setItems(items);\n    // Makes the groups searchable via their id.\n    setGroups(groups);\n  };\n\n  useEffect(() => {\n    // Mock an API call.\n    buildAndSave(items);\n  }, []);\n\n  return (\n    <DragDropContext\n      onDragEnd={(result) => {\n        const { destination, draggableId, source, type } = result;\n\n        if (!destination) {\n          return;\n        }\n\n        if (\n          destination.droppableId === source.droppableId &&\n          destination.index === source.index\n        ) {\n          return;\n        }\n\n        if (\"group\" === type) {\n          const sourceIndex = source.index;\n          const targetIndex = destination.index;\n\n          const workValue = items.slice();\n          const [deletedItem] = workValue.splice(sourceIndex, 1);\n          workValue.splice(targetIndex, 0, deletedItem);\n\n          buildAndSave(workValue);\n\n          return;\n        }\n\n        const sourceDroppableIndex = groups[source.droppableId];\n        const targetDroppableIndex = groups[destination.droppableId];\n        const sourceItems = items[sourceDroppableIndex].items.slice();\n        const targetItems =\n          source.droppableId !== destination.droppableId\n            ? items[targetDroppableIndex].items.slice()\n            : sourceItems;\n\n        // Pull the item from the source.\n        const [deletedItem] = sourceItems.splice(source.index, 1);\n        targetItems.splice(destination.index, 0, deletedItem);\n\n        const workValue = items.slice();\n        workValue[sourceDroppableIndex] = {\n          ...items[sourceDroppableIndex],\n          items: sourceItems,\n        };\n        workValue[targetDroppableIndex] = {\n          ...items[targetDroppableIndex],\n          items: targetItems,\n        };\n\n        setItems(workValue);\n      }}\n    >\n      <Droppable droppableId=\"ROOT\" type=\"group\">\n        {(provided) => (\n          <div\n            {...provided.droppableProps}\n            ref={provided.innerRef}\n            className={className}\n          >\n            {items.map((item, index) => (\n              <Draggable draggableId={item.id} key={item.id} index={index}>\n                {(provided) => (\n                  <div\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                    ref={provided.innerRef}\n                  >\n                    <DroppableList key={item.id} {...item} />\n                  </div>\n                )}\n              </Draggable>\n            ))}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n};\n\nconst DroppableList = ({ id, items, label }: GroupType) => {\n  return (\n    <Droppable droppableId={id}>\n      {(provided) => (\n        <div {...provided.droppableProps} ref={provided.innerRef}>\n          <div>\n            <div className=\"bg-gray-500 rounded-t-md\">{label}</div>\n            <div className=\"bg-gray-500 rounded-b-md\">\n              <ul className=\"list\">\n                {items.filter(Boolean).map((item, index) => (\n                  <li className={item.className} key={item.id}>\n                    <Draggable draggableId={item.id} index={index}>\n                      {(provided) => (\n                        <div\n                          className={\n                            item.className || \"bg-blue-400 rounded-md mb-1 mx-1\"\n                          }\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                          ref={provided.innerRef}\n                        >\n                          {item.label}\n                        </div>\n                      )}\n                    </Draggable>\n                  </li>\n                ))}\n                {provided.placeholder}\n              </ul>\n            </div>\n          </div>\n        </div>\n      )}\n    </Droppable>\n  );\n};\n\nexport default DndSheet;\n","import { useState } from \"react\";\n\nexport const useLocalStorage = (key: string, initialValue: any): any => {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (err) {\n      console.error(err);\n      return initialValue;\n    }\n  });\n\n  const setValue = (value: any) => {\n    try {\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return [storedValue, setValue];\n};\n\nexport default useLocalStorage;\n\nexport const getLocalStorage = (key: string): any => {\n  try {\n    const item = window.localStorage.getItem(key);\n    return item ? JSON.parse(item) : null;\n  } catch (err) {\n    console.error(err);\n    return null;\n  }\n};\n","import Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport { getLocalStorage } from \"@hooks/use-local-storage\";\n\nconst Gists = require(\"gists\");\n\nexport const openGist = () => {\n  const MySwal = withReactContent(Swal);\n\n  MySwal.fire({\n    title: <p>Hello World</p>,\n    footer: \"Copyright 2018\",\n    didOpen: () => {\n      // `MySwal` is a subclass of `Swal`\n      //   with all the same instance & static methods\n      MySwal.clickConfirm();\n    },\n  }).then(() => {\n    return MySwal.fire(<p>Shorthand works too</p>);\n  });\n};\n\nexport const TryOpenGist = async (\n  gistId: string,\n  token: string,\n  cb: (a: { content?: string; fileName?: string }) => void\n) => {\n  const MySwal = withReactContent(Swal);\n  const gists = new Gists({ token });\n  console.log(\"Gist\", gists, token);\n\n  if (gists && token && gistId) {\n    gists.get(gistId).then((gist: any) => {\n      const gistFiles = gist.body.files;\n      const inputOptions: any = {};\n      Object.keys(gistFiles).forEach((key) => {\n        inputOptions[key] = key;\n      });\n      console.log(\"GIST FILES\", gistFiles);\n      MySwal.fire({\n        title: \"🐙 Open file from a gist\",\n        input: \"select\",\n        inputOptions,\n        inputAttributes: {\n          autocomplete: \"off\",\n        },\n        inputPlaceholder: \"Select a file from the gist\",\n        showCancelButton: true,\n      }).then(({ value }) => {\n        if (value) {\n          const content = gistFiles[value].content;\n          const fileName = gistFiles[value].filename;\n          console.log(gistFiles[value]);\n          cb({ content, fileName });\n        }\n      });\n    });\n  } else {\n    Swal.fire(\n      \"Not configured\",\n      \"Your github settings are not configured\",\n      \"warning\"\n    );\n    cb({});\n  }\n};\n\nexport const trySaveGist = async (\n  gistId: string,\n  token: string,\n  fileName = \"new\",\n  data: string\n) => {\n  const gists = new Gists({ token });\n\n  if (gistId && token && gists) {\n    gists.get(gistId).then((gist: any) => {\n      const gistFiles = Object.keys(gist.body.files);\n      console.log(gistFiles);\n      gists.edit(gistId, {\n        files: { [fileName]: { content: data } },\n      });\n      Swal.fire(\n        \"Saved!\",\n        `The Yarn has been saved to gist ${gistId}`,\n        \"success\"\n      );\n    });\n  } else {\n    Swal.fire(\n      \"Not configured\",\n      \"Your github settings are not configured\",\n      \"warning\"\n    );\n  }\n};\n","import React, { useEffect, useRef, useState } from \"react\";\nimport logo from \"./logo.svg\";\nimport DndSheet, { GroupType } from \"@components/dnd-sheet\";\nimport useLocalStorage, { getLocalStorage } from \"@hooks/use-local-storage\";\nimport { openGist, TryOpenGist, trySaveGist } from \"@helpers/gist\";\nimport {\n  initiatePwaButton,\n  getNewFileHandle,\n  readFile,\n  writeFile,\n  getFileHandle,\n} from \"@helpers/local-fs\";\n\nimport \"../../App.css\";\n\nconst DATA = [\n  {\n    id: \"af3\",\n    label: \"Incoming leads\",\n    items: [\n      {\n        id: \"af31\",\n        label: \"Item 3.1 - Auguri\",\n        className: \"bg-red-500 hover:bg-red-700 rounded-md mb-1 mx-1\",\n      },\n      {\n        id: \"af32\",\n        label:\n          \"Item 3.2 - Sed tellus risus, tincidunt ac fringilla sed, rho vel elit. Fusce et mauris lobortis\",\n      },\n      {\n        id: \"af33\",\n        label:\n          \"Item 3.3 - Praesent nec massa vel ante porta elementum. Nulla urna risus, ullamcorper a nibh sodales, laoreet ullamcorper arcu. Nulla vel ante neque. Ut nunc tortor\",\n      },\n      { id: \"af34\", label: \"Item 3.4 - Aliquam hendrerit quis nibh\" },\n    ],\n    tint: 1,\n  },\n  {\n    id: \"af1\",\n    label: \"Closing leads\",\n    items: [\n      { id: \"af11\", label: \"Item 1.1 - Sed sit amet ornare nisi.\" },\n      {\n        id: \"af12\",\n        label:\n          \"Item 1.2 - Donec aliquet commodo justo, in faucibus libero efficitur ut. Nam ut lacus in dui sollicitudin sollicitudin.\",\n      },\n    ],\n    tint: 2,\n  },\n  {\n    id: \"af2\",\n    label: \"On hold\",\n    items: [\n      { id: \"af21\", label: \"Item 2.1 - Vivamus eget ante tempor\" },\n      { id: \"af22\", label: \"Item 2.2 - Pellentesque euismod\" },\n    ],\n    tint: 3,\n  },\n];\n\n//https://web.dev/file-system-access/\nconst Main = () => {\n  const [items, setItems] = useLocalStorage(\"dnd-sheet-data\", DATA);\n  const [hasChanges, setHasChanges] = useState(false);\n  const editedFileRef = useRef<any>(null);\n\n  useEffect(() => {\n    initiatePwaButton(\"addBtn\");\n  }, []);\n\n  useEffect(() => {\n    if (editedFileRef.current) setHasChanges(true);\n  }, [items, editedFileRef.current]);\n\n  const onSave = async () => {\n    const gistId = getLocalStorage(\"gistId\");\n    const token = getLocalStorage(\"gistToken\");\n    trySaveGist(\n      gistId,\n      token,\n      editedFileRef.current.name,\n      JSON.stringify(items)\n    );\n    setHasChanges(false);\n\n    // from hd - not working on mobile yet boo\n    // if (!editedFileRef.current) {\n    //   //ask about saving a new file\n    //   editedFileRef.current = await getNewFileHandle({ extension: \"json\" });\n    //   console.log(\"new file\", editedFileRef.current?.name);\n    // }\n    // writeFile(editedFileRef.current, JSON.stringify(items));\n    // console.log(\"wrote to\", editedFileRef.current);\n    // setHasChanges(false);\n  };\n\n  const onNew = () => {\n    editedFileRef.current = null;\n    onSave();\n  };\n\n  const onOpen = async () => {\n    const gistId = getLocalStorage(\"gistId\");\n    const token = getLocalStorage(\"gistToken\");\n    // from gist\n    TryOpenGist(gistId, token, ({ content, fileName }: any) => {\n      console.log(\"Got this:\", content);\n      setItems(JSON.parse(content));\n      editedFileRef.current = { name: fileName };\n      setHasChanges(false);\n    });\n\n    // From local hd - not working on mobile yet- boo\n    // editedFileRef.current = await getFileHandle();\n    // const file = await editedFileRef.current.getFile();\n    // const fileContents = await readFile(file);\n    // console.log(\"opened file\", fileContents);\n    // setItems(JSON.parse(fileContents));\n    // setHasChanges(false);\n  };\n\n  return (\n    <div className=\"bg-gray-700 flex flex-1 flex-col\">\n      <header className=\"flex-1 py-2 flex flex-row\">\n        <img src={logo} className=\"animate-spin h-8\" alt=\"logo\" />\n        <br />\n        <button id=\"addBtn\" className=\"bg-blue-400 rounded-md p-1 mb-3\">\n          Install pwa\n        </button>\n        <div className=\"flex-box flex-wrap flex-1\">\n          <button\n            onClick={onOpen}\n            className=\"bg-red-400 rounded-md p-1 mb-3 mx-1\"\n          >\n            Open\n          </button>\n          <button\n            className=\"bg-red-400 rounded-md p-1 mb-3 mx-1\"\n            onClick={onSave}\n          >\n            Save {editedFileRef.current?.name} {hasChanges ? \"*\" : \"\"}\n          </button>\n          {editedFileRef.current && (\n            <button\n              onClick={onNew}\n              className=\"bg-red-400 rounded-md p-1 mb-3 mx-1\"\n            >\n              New\n            </button>\n          )}\n        </div>\n      </header>\n      <DndSheet items={items} setItems={setItems} className=\"px-4\" />\n    </div>\n  );\n};\n\nexport default Main;\n","export const initiatePwaButton = (buttonId = \"addBtn\") => {\n  // PWA install promotion banner on start\n  let deferredPrompt: any = null;\n  const addBtn: any = document.getElementById(buttonId);\n  window.addEventListener(\"beforeinstallprompt\", (e: any) => {\n    // Prevent Chrome 67 and earlier from automatically showing the prompt\n    e.preventDefault();\n    deferredPrompt = e;\n    // Update UI to notify the user they can add to home screen\n    addBtn.style.display = \"block\";\n\n    addBtn.addEventListener(\"click\", () => {\n      // hide our user interface that shows our A2HS button\n      addBtn.style.display = \"none\";\n      deferredPrompt.prompt();\n      // Wait for the user to respond to the prompt\n      deferredPrompt.userChoice.then((choiceResult: any) => {\n        if (choiceResult.outcome === \"accepted\") {\n          console.log(\"User accepted the A2HS prompt\");\n          addBtn.style.display = \"none\";\n        } else {\n          console.log(\"User dismissed the A2HS prompt\");\n        }\n        deferredPrompt = null;\n      });\n    });\n\n    if (window.matchMedia(\"(display-mode: fullscreen)\").matches) {\n      addBtn.style.display = \"none\";\n    }\n  });\n};\n\n// https://github.com/GoogleChromeLabs/text-editor/blob/main/src/inline-scripts/fs-helpers.js\n// Requests continuous read/write access to a file and returns an object to let you write to the file on demand\n/**\n * Writes the contents to disk.\n *\n * @param {FileSystemFileHandle} fileHandle File handle to write to.\n * @param {string} contents Contents to write.\n */\nexport const writeFile = async (fileHandle: any, contents: string) => {\n  // Support for Chrome 82 and earlier.\n  if (fileHandle.createWriter) {\n    // Create a writer (request permission if necessary).\n    const writer = await fileHandle.createWriter();\n    // Write the full length of the contents\n    await writer.write(0, contents);\n    // Close the file and write the contents to disk\n    await writer.close();\n    return;\n  }\n  console.log(fileHandle);\n  // For Chrome 83 and later.\n  // Create a FileSystemWritableFileStream to write to.\n  const writable = await fileHandle.createWritable();\n  // Write the contents of the file to the stream.\n  await writable.write(contents);\n  // Close the file and write the contents to disk.\n  await writable.close();\n};\n\n/**\n * Open a handle to an existing file on the local file system.\n *\n * @return {!Promise<FileSystemFileHandle>} Handle to the existing file.\n */\nexport const getFileHandle = () => {\n  // For Chrome 86 and later...\n  if (\"showOpenFilePicker\" in window) {\n    //@ts-ignore\n    return window.showOpenFilePicker().then((handles: any) => handles[0]);\n  }\n  // For Chrome 85 and earlier...\n  //@ts-ignore\n  return window.chooseFileSystemEntries();\n};\n\n/**\n * Create a handle to a new (text) file on the local file system.\n * @return {!Promise<FileSystemFileHandle>} Handle to the new file.\n */\nexport const getNewFileHandle = (options = { extension: \"txt\" }) => {\n  const { extension } = options;\n  // For Chrome 86 and later...\n  if (\"showSaveFilePicker\" in window) {\n    const opts = {\n      types: [\n        {\n          description: \"Text file\",\n          accept: { \"text/plain\": [`.${extension}`] },\n        },\n      ],\n    };\n    //@ts-ignore\n    return window.showSaveFilePicker(opts);\n  }\n  // For Chrome 85 and earlier...\n  const opts = {\n    type: \"save-file\",\n    accepts: [\n      {\n        description: \"Text file\",\n        extensions: [extension],\n        mimeTypes: [\"text/plain\"],\n      },\n    ],\n  };\n  //@ts-ignore\n  return window.chooseFileSystemEntries(opts);\n};\n\n/**\n * Reads the raw text from a file.\n *\n * @private\n * @param {File} file\n * @return {Promise<string>} A promise that resolves to the parsed string.\n */\nconst _readFileLegacy = (file: any) => {\n  return new Promise((resolve) => {\n    const reader = new FileReader();\n    reader.addEventListener(\"loadend\", (e) => {\n      //@ts-ignore\n      const text = e.srcElement?.result;\n      resolve(text);\n    });\n    reader.readAsText(file);\n  });\n};\n\n/**\n * Reads the raw text from a file.\n *\n * @param {File} file\n * @return {!Promise<string>} A promise that resolves to the parsed string.\n */\nexport const readFile = (file: any) => {\n  // If the new .text() reader is available, use it.\n  if (file.text) {\n    return file.text();\n  }\n  // Otherwise use the traditional file reading technique.\n  return _readFileLegacy(file);\n};\n\n/**\n * Verify the user has granted permission to read or write to the file, if\n * permission hasn't been granted, request permission.\n *\n * @param {FileSystemFileHandle} fileHandle File handle to check.\n * @param {boolean} withWrite True if write permission should be checked.\n * @return {boolean} True if the user has granted read/write permission.\n */\nexport const verifyPermission = async (fileHandle: any, withWrite: boolean) => {\n  const opts = { writable: false, mode: \"\" };\n  if (withWrite) {\n    opts.writable = true;\n    // For Chrome 86 and later...\n    opts.mode = \"readwrite\";\n  }\n  // Check if we already have permission, if so, return true.\n  if ((await fileHandle.queryPermission(opts)) === \"granted\") {\n    return true;\n  }\n  // Request permission to the file, if the user grants permission, return true.\n  if ((await fileHandle.requestPermission(opts)) === \"granted\") {\n    return true;\n  }\n  // The user did nt grant permission, return false.\n  return false;\n};\n","import React from \"react\";\n\nconst About = () => {\n  return (\n    <>\n      <div>Created by Todor Imreorov</div>\n      <a href=\"https://github.com/blurymind/react-pwa-boilerplate\">\n        Check out the source code at\n        https://github.com/blurymind/react-pwa-boilerplate\n      </a>\n    </>\n  );\n};\n\nexport default About;\n","import React from \"react\";\n\nimport useLocalStorage from \"@hooks/use-local-storage\";\n\nconst Settings = () => {\n  const [gistId, setGistId] = useLocalStorage(\"gistId\", \"\");\n  const [gistToken, setGistToken] = useLocalStorage(\"gistToken\", \"\");\n\n  return (\n    <div className=\"border flex flex-col m-4 p-1 bg-gray-100\">\n      <label className=\"mb-3 bg-gray-200 flex-1\">Storage:</label>\n      <div className=\"mb-1 flex-1\">\n        <label>Gist token: </label>\n        <input\n          onChange={(e) => setGistToken(e.target.value)}\n          type=\"password\"\n          value={gistToken}\n          className=\"bg-white flex-1\"\n        />\n        {gistToken.length === 0 && (\n          <a\n            target=\"_blank\"\n            href=\"https://github.com/settings/tokens/new\"\n            className=\"ml-4 bg-gray-300 px-3\"\n          >\n            create\n          </a>\n        )}\n      </div>\n      <div>\n        <label>Gist id: </label>\n        <input\n          onChange={(e) => setGistId(e.target.value)}\n          type=\"text\"\n          value={gistId}\n          className=\"bg-white flex-1\"\n        />\n        {gistId.length === 0 && (\n          <a\n            target=\"_blank\"\n            href=\"https://gist.github.com/\"\n            className=\"ml-4 bg-gray-300 px-3\"\n          >\n            create\n          </a>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Settings;\n","import React from \"react\";\nimport { Switch, Route, HashRouter } from \"react-router-dom\";\nimport NavBar from \"@components/nav-bar\";\nimport Main from \"@pages/main\";\nimport About from \"@pages/about\";\nimport Settings from \"@pages/settings\";\n\nconst App = () => {\n  return (\n    <>\n      <NavBar className=\"flex justify-between item-center h-16 bg-white text-black relative shadow-sm font-mono\" />\n      <HashRouter basename={process.env.PUBLIC_URL}>\n        <Route\n          render={({ location }) => (\n            <Switch location={location}>\n              <Route path=\"/\" exact component={Main} />\n              <Route path=\"/about\" component={About} />\n              <Route path=\"/settings\" component={Settings} />\n            </Switch>\n          )}\n        />\n      </HashRouter>\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  //if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n  if ('serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}